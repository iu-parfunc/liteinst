import java.io.FileOutputStream;
import java.io.IOException;

public class IDDG // InvokeDynamic Demo Generator
{
   static short[] _bytes =
   {
      0xCA, 0xFE, 0xBA, 0xBE, 0x00, 0x00, 0x00, 0x33,
      0x00, 0x17, 0x01, 0x00, 0x03, 0x49, 0x44, 0x44,
      0x07, 0x00, 0x01, 0x01, 0x00, 0x10, 0x6A, 0x61,
      0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F,
      0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x07, 0x00,
      0x03, 0x01, 0x00, 0x06, 0x3C, 0x69, 0x6E, 0x69,
      0x74, 0x3E, 0x01, 0x00, 0x03, 0x28, 0x29, 0x56,
      0x0C, 0x00, 0x05, 0x00, 0x06, 0x0A, 0x00, 0x04,
      0x00, 0x07, 0x01, 0x00, 0x04, 0x6D, 0x61, 0x69,
      0x6E, 0x01, 0x00, 0x16, 0x28, 0x5B, 0x4C, 0x6A,
      0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67,
      0x2F, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3B,
      0x29, 0x56, 0x01, 0x00, 0x04, 0x49, 0x44, 0x44,
      0x4C, 0x07, 0x00, 0x0B, 0x01, 0x00, 0x10, 0x62,
      0x6F, 0x6F, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
      0x44, 0x79, 0x6E, 0x61, 0x6D, 0x69, 0x63, 0x01,
      0x00, 0x73, 0x28, 0x4C, 0x6A, 0x61, 0x76, 0x61,
      0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x69, 0x6E,
      0x76, 0x6F, 0x6B, 0x65, 0x2F, 0x4D, 0x65, 0x74,
      0x68, 0x6F, 0x64, 0x48, 0x61, 0x6E, 0x64, 0x6C,
      0x65, 0x73, 0x24, 0x4C, 0x6F, 0x6F, 0x6B, 0x75,
      0x70, 0x3B, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F,
      0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x53, 0x74, 0x72,
      0x69, 0x6E, 0x67, 0x3B, 0x4C, 0x6A, 0x61, 0x76,
      0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x69,
      0x6E, 0x76, 0x6F, 0x6B, 0x65, 0x2F, 0x4D, 0x65,
      0x74, 0x68, 0x6F, 0x64, 0x54, 0x79, 0x70, 0x65,
      0x3B, 0x29, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F,
      0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x69, 0x6E, 0x76,
      0x6F, 0x6B, 0x65, 0x2F, 0x43, 0x61, 0x6C, 0x6C,
      0x53, 0x69, 0x74, 0x65, 0x3B, 0x0C, 0x00, 0x0D,
      0x00, 0x0E, 0x0A, 0x00, 0x0C, 0x00, 0x0F, 0x0F,
      0x06, 0x00, 0x10, 0x01, 0x00, 0x03, 0x66, 0x6F,
      0x6F, 0x0C, 0x00, 0x12, 0x00, 0x06, 0x12, 0x00,
      0x00, 0x00, 0x13, 0x01, 0x00, 0x04, 0x43, 0x6F,
      0x64, 0x65, 0x01, 0x00, 0x10, 0x42, 0x6F, 0x6F,
      0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x4D, 0x65,
      0x74, 0x68, 0x6F, 0x64, 0x73, 0x00, 0x21, 0x00,
      0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x02, 0x00, 0x01, 0x00, 0x05, 0x00, 0x06, 0x00,
      0x01, 0x00, 0x15, 0x00, 0x00, 0x00, 0x11, 0x00,
      0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2A,
      0xB7, 0x00, 0x08, 0xB1, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x09, 0x00, 0x09, 0x00, 0x0A, 0x00, 0x01,
      0x00, 0x15, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
      0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0xBA, 0x00,
      0x14, 0x00, 0x00, 0xB1, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0x00, 0x16, 0x00, 0x00, 0x00, 0x06,
      0x00, 0x01, 0x00, 0x11, 0x00, 0x00
   };

   public static void main(String[] args)
   {
      System.out.println("IDDG: Running Generator for IDD.class ...\n");
      try (FileOutputStream fos = new FileOutputStream("IDD.class"))
      {
         for (short _byte: _bytes)
            fos.write(_byte);
      }
      catch (IOException ioe)
      {
         ioe.printStackTrace();
      }
      System.out.println("IDD.class written.\n");
   }
}
