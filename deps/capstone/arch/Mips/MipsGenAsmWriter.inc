/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013> */

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, SStream *O, MCRegisterInfo *MRI)
{
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    7873U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    7866U,	// BUNDLE
    7883U,	// LIFETIME_START
    7853U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    12663U,	// ABSQ_S_PH
    9521U,	// ABSQ_S_QB
    15217U,	// ABSQ_S_W
    16788525U,	// ADD
    16789684U,	// ADDQH_PH
    16789801U,	// ADDQH_R_PH
    16792108U,	// ADDQH_R_W
    16791711U,	// ADDQH_W
    16789758U,	// ADDQ_PH
    16789857U,	// ADDQ_S_PH
    16792413U,	// ADDQ_S_W
    16786897U,	// ADDSC
    16785730U,	// ADDS_A_B
    16786948U,	// ADDS_A_D
    16788629U,	// ADDS_A_H
    16791419U,	// ADDS_A_W
    16786198U,	// ADDS_S_B
    16787866U,	// ADDS_S_D
    16789186U,	// ADDS_S_H
    16792463U,	// ADDS_S_W
    16786413U,	// ADDS_U_B
    16788289U,	// ADDS_U_D
    16789464U,	// ADDS_U_H
    16792881U,	// ADDS_U_W
    16786605U,	// ADDUH_QB
    16786713U,	// ADDUH_R_QB
    16789956U,	// ADDU_PH
    16786818U,	// ADDU_QB
    16789901U,	// ADDU_S_PH
    16786759U,	// ADDU_S_QB
    285221435U,	// ADDVI_B
    285222825U,	// ADDVI_D
    285224301U,	// ADDVI_H
    285227300U,	// ADDVI_W
    16786491U,	// ADDV_B
    16788389U,	// ADDV_D
    16789542U,	// ADDV_H
    16792981U,	// ADDV_W
    16786904U,	// ADDWC
    16785712U,	// ADD_A_B
    16786929U,	// ADD_A_D
    16788611U,	// ADD_A_H
    16791400U,	// ADD_A_W
    16788525U,	// ADD_MM
    16790163U,	// ADDi
    16790163U,	// ADDi_MM
    16791197U,	// ADDiu
    16791197U,	// ADDiu_MM
    16791172U,	// ADDu
    16791172U,	// ADDu_MM
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    16788547U,	// AND
    16788547U,	// AND64
    285221294U,	// ANDI_B
    16788547U,	// AND_MM
    16791250U,	// AND_V
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    553661081U,	// ANDi
    553661081U,	// ANDi64
    553661081U,	// ANDi_MM
    553659473U,	// APPEND
    16786092U,	// ASUB_S_B
    16787696U,	// ASUB_S_D
    16789018U,	// ASUB_S_H
    16792243U,	// ASUB_S_W
    16786307U,	// ASUB_U_B
    16788119U,	// ASUB_U_D
    16789306U,	// ASUB_U_H
    16792711U,	// ASUB_U_W
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    16786178U,	// AVER_S_B
    16787846U,	// AVER_S_D
    16789156U,	// AVER_S_H
    16792443U,	// AVER_S_W
    16786393U,	// AVER_U_B
    16788269U,	// AVER_U_D
    16789444U,	// AVER_U_H
    16792861U,	// AVER_U_W
    16786120U,	// AVE_S_B
    16787778U,	// AVE_S_D
    16789088U,	// AVE_S_H
    16792325U,	// AVE_S_W
    16786335U,	// AVE_U_B
    16788201U,	// AVE_U_D
    16789376U,	// AVE_U_H
    16792793U,	// AVE_U_W
    13981U,	// AddiuRxImmX16
    79517U,	// AddiuRxPcImmX16
    34616989U,	// AddiuRxRxImm16
    1062557U,	// AddiuRxRxImmX16
    2111133U,	// AddiuRxRyOffMemX16
    147040U,	// AddiuSpImm16
    212576U,	// AddiuSpImmX16
    16791172U,	// AdduRxRyRz16
    1059907U,	// AndRxRxRy16
    0U,	// B
    553661382U,	// BALIGN
    0U,	// BAL_BR
    11378U,	// BC1F
    11378U,	// BC1F_MM
    13902U,	// BC1T
    13902U,	// BC1T_MM
    285221363U,	// BCLRI_B
    285222769U,	// BCLRI_D
    285224245U,	// BCLRI_H
    285227244U,	// BCLRI_W
    16786059U,	// BCLR_B
    16787620U,	// BCLR_D
    16788985U,	// BCLR_H
    16792159U,	// BCLR_W
    16790583U,	// BEQ
    16790583U,	// BEQ64
    16790583U,	// BEQ_MM
    15861U,	// BGEZ
    15861U,	// BGEZ64
    13065U,	// BGEZAL
    13065U,	// BGEZAL_MM
    15861U,	// BGEZ_MM
    15905U,	// BGTZ
    15905U,	// BGTZ64
    15905U,	// BGTZ_MM
    823140824U,	// BINSLI_B
    823142230U,	// BINSLI_D
    823143706U,	// BINSLI_H
    823146705U,	// BINSLI_W
    1091576427U,	// BINSL_B
    1091577879U,	// BINSL_D
    1091579276U,	// BINSL_H
    1091582319U,	// BINSL_W
    823140885U,	// BINSRI_B
    823142275U,	// BINSRI_D
    823143751U,	// BINSRI_H
    823146750U,	// BINSRI_W
    1091576475U,	// BINSR_B
    1091578070U,	// BINSR_D
    1091579401U,	// BINSR_H
    1091582609U,	// BINSR_W
    14106U,	// BITREV
    15867U,	// BLEZ
    15867U,	// BLEZ64
    15867U,	// BLEZ_MM
    15911U,	// BLTZ
    15911U,	// BLTZ64
    13073U,	// BLTZAL
    13073U,	// BLTZAL_MM
    15911U,	// BLTZ_MM
    823140940U,	// BMNZI_B
    1091581707U,	// BMNZ_V
    823140932U,	// BMZI_B
    1091581693U,	// BMZ_V
    16788578U,	// BNE
    16788578U,	// BNE64
    285221302U,	// BNEGI_B
    285222717U,	// BNEGI_D
    285224193U,	// BNEGI_H
    285227192U,	// BNEGI_W
    16785814U,	// BNEG_B
    16787237U,	// BNEG_D
    16788713U,	// BNEG_H
    16791631U,	// BNEG_W
    16788578U,	// BNE_MM
    9315U,	// BNZ_B
    11288U,	// BNZ_D
    12366U,	// BNZ_H
    14084U,	// BNZ_V
    15830U,	// BNZ_W
    204937U,	// BPOSGE32
    0U,	// BPOSGE32_PSEUDO
    13035U,	// BREAK
    13035U,	// BREAK_MM
    823140799U,	// BSELI_B
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    1091581665U,	// BSEL_V
    0U,	// BSEL_W_PSEUDO
    285221417U,	// BSETI_B
    285222807U,	// BSETI_D
    285224283U,	// BSETI_H
    285227282U,	// BSETI_W
    16786275U,	// BSET_B
    16787982U,	// BSET_D
    16789274U,	// BSET_H
    16792617U,	// BSET_W
    9309U,	// BZ_B
    11282U,	// BZ_D
    12360U,	// BZ_H
    14071U,	// BZ_V
    15824U,	// BZ_W
    50347540U,	// BeqzRxImm16
    15892U,	// BeqzRxImmX16
    139574U,	// Bimm16
    205110U,	// BimmX16
    50347521U,	// BnezRxImm16
    15873U,	// BnezRxImmX16
    7845U,	// Break16
    278042U,	// Bteqz16
    67122173U,	// BteqzT8CmpX16
    67121861U,	// BteqzT8CmpiX16
    67122772U,	// BteqzT8SltX16
    67121879U,	// BteqzT8SltiX16
    67122859U,	// BteqzT8SltiuX16
    67122873U,	// BteqzT8SltuX16
    212506U,	// BteqzX16
    278023U,	// Btnez16
    83899389U,	// BtnezT8CmpX16
    83899077U,	// BtnezT8CmpiX16
    83899988U,	// BtnezT8SltX16
    83899095U,	// BtnezT8SltiX16
    83900075U,	// BtnezT8SltiuX16
    83900089U,	// BtnezT8SltuX16
    212487U,	// BtnezX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    10184U,	// CEIL_L_D64
    13682U,	// CEIL_L_S
    11244U,	// CEIL_W_D32
    11244U,	// CEIL_W_D64
    11244U,	// CEIL_W_MM
    13864U,	// CEIL_W_S
    13864U,	// CEIL_W_S_MM
    16785890U,	// CEQI_B
    16787296U,	// CEQI_D
    16788772U,	// CEQI_H
    16791771U,	// CEQI_W
    16786044U,	// CEQ_B
    16787561U,	// CEQ_D
    16788963U,	// CEQ_H
    16792047U,	// CEQ_W
    8227U,	// CFC1
    8227U,	// CFC1_MM
    8480U,	// CFCMSA
    16786129U,	// CLEI_S_B
    16787787U,	// CLEI_S_D
    16789097U,	// CLEI_S_H
    16792334U,	// CLEI_S_W
    285221800U,	// CLEI_U_B
    285223666U,	// CLEI_U_D
    285224841U,	// CLEI_U_H
    285228258U,	// CLEI_U_W
    16786111U,	// CLE_S_B
    16787769U,	// CLE_S_D
    16789079U,	// CLE_S_H
    16792316U,	// CLE_S_W
    16786326U,	// CLE_U_B
    16788192U,	// CLE_U_D
    16789367U,	// CLE_U_H
    16792784U,	// CLE_U_W
    13269U,	// CLO
    13269U,	// CLO_MM
    16786149U,	// CLTI_S_B
    16787807U,	// CLTI_S_D
    16789117U,	// CLTI_S_H
    16792354U,	// CLTI_S_W
    285221820U,	// CLTI_U_B
    285223686U,	// CLTI_U_D
    285224861U,	// CLTI_U_H
    285228278U,	// CLTI_U_W
    16786217U,	// CLT_S_B
    16787885U,	// CLT_S_D
    16789205U,	// CLT_S_H
    16792482U,	// CLT_S_W
    16786444U,	// CLT_U_B
    16788320U,	// CLT_U_D
    16789495U,	// CLT_U_H
    16792912U,	// CLT_U_W
    15887U,	// CLZ
    15887U,	// CLZ_MM
    16786651U,	// CMPGDU_EQ_QB
    16786556U,	// CMPGDU_LE_QB
    16786770U,	// CMPGDU_LT_QB
    16786665U,	// CMPGU_EQ_QB
    16786570U,	// CMPGU_LE_QB
    16786784U,	// CMPGU_LT_QB
    9462U,	// CMPU_EQ_QB
    9367U,	// CMPU_LE_QB
    9581U,	// CMPU_LT_QB
    12551U,	// CMP_EQ_PH
    12447U,	// CMP_LE_PH
    12720U,	// CMP_LT_PH
    7915U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    2516591440U,	// COPY_S_B
    2516593130U,	// COPY_S_D
    2516594439U,	// COPY_S_H
    2516597738U,	// COPY_S_W
    2516591655U,	// COPY_U_B
    2516593553U,	// COPY_U_D
    2516594706U,	// COPY_U_H
    2516598145U,	// COPY_U_W
    344126U,	// CTC1
    344126U,	// CTC1_MM
    8488U,	// CTCMSA
    13567U,	// CVT_D32_S
    14263U,	// CVT_D32_W
    14263U,	// CVT_D32_W_MM
    13042U,	// CVT_D64_L
    13567U,	// CVT_D64_S
    14263U,	// CVT_D64_W
    13567U,	// CVT_D_S_MM
    10205U,	// CVT_L_D64
    10205U,	// CVT_L_D64_MM
    13703U,	// CVT_L_S
    13703U,	// CVT_L_S_MM
    10471U,	// CVT_S_D32
    10471U,	// CVT_S_D32_MM
    10471U,	// CVT_S_D64
    13051U,	// CVT_S_L
    15018U,	// CVT_S_W
    15018U,	// CVT_S_W_MM
    11265U,	// CVT_W_D32
    11265U,	// CVT_W_D64
    11265U,	// CVT_W_MM
    13885U,	// CVT_W_S
    13885U,	// CVT_W_S_MM
    10336U,	// C_EQ_D32
    10336U,	// C_EQ_D64
    13744U,	// C_EQ_S
    9974U,	// C_F_D32
    9974U,	// C_F_D64
    13630U,	// C_F_S
    9861U,	// C_LE_D32
    9861U,	// C_LE_D64
    13594U,	// C_LE_S
    10783U,	// C_LT_D32
    10783U,	// C_LT_D64
    13786U,	// C_LT_S
    9852U,	// C_NGE_D32
    9852U,	// C_NGE_D64
    13585U,	// C_NGE_S
    9877U,	// C_NGLE_D32
    9877U,	// C_NGLE_D64
    13602U,	// C_NGLE_S
    10214U,	// C_NGL_D32
    10214U,	// C_NGL_D64
    13712U,	// C_NGL_S
    10774U,	// C_NGT_D32
    10774U,	// C_NGT_D64
    13777U,	// C_NGT_S
    9887U,	// C_OLE_D32
    9887U,	// C_OLE_D64
    13612U,	// C_OLE_S
    10799U,	// C_OLT_D32
    10799U,	// C_OLT_D64
    13794U,	// C_OLT_S
    10352U,	// C_SEQ_D32
    10352U,	// C_SEQ_D64
    13752U,	// C_SEQ_S
    10005U,	// C_SF_D32
    10005U,	// C_SF_D64
    13637U,	// C_SF_S
    10369U,	// C_UEQ_D32
    10369U,	// C_UEQ_D64
    13761U,	// C_UEQ_S
    9904U,	// C_ULE_D32
    9904U,	// C_ULE_D64
    13621U,	// C_ULE_S
    10816U,	// C_ULT_D32
    10816U,	// C_ULT_D64
    13803U,	// C_ULT_S
    10296U,	// C_UN_D32
    10296U,	// C_UN_D64
    13728U,	// C_UN_S
    13309U,	// CmpRxRy16
    117453509U,	// CmpiRxImm16
    12997U,	// CmpiRxImmX16
    212594U,	// Constant32
    16788524U,	// DADD
    16790162U,	// DADDi
    16791196U,	// DADDiu
    16791171U,	// DADDu
    13268U,	// DCLO
    15886U,	// DCLZ
    7919U,	// DERET
    7919U,	// DERET_MM
    553664142U,	// DEXT
    553664129U,	// DEXTM
    553664155U,	// DEXTU
    209557U,	// DI
    553664136U,	// DINS
    553664122U,	// DINSM
    553664148U,	// DINSU
    16786238U,	// DIV_S_B
    16787928U,	// DIV_S_D
    16789226U,	// DIV_S_H
    16792525U,	// DIV_S_W
    16786453U,	// DIV_U_B
    16788351U,	// DIV_U_D
    16789504U,	// DIV_U_H
    16792943U,	// DIV_U_W
    209557U,	// DI_MM
    16785690U,	// DLSA
    553656329U,	// DMFC0
    8233U,	// DMFC1
    553656504U,	// DMFC2
    553656336U,	// DMTC0
    344132U,	// DMTC1
    553656511U,	// DMTC2
    13918U,	// DMULT
    14021U,	// DMULTu
    16787836U,	// DOTP_S_D
    16789146U,	// DOTP_S_H
    16792393U,	// DOTP_S_W
    16788259U,	// DOTP_U_D
    16789434U,	// DOTP_U_H
    16792851U,	// DOTP_U_W
    1091578149U,	// DPADD_S_D
    1091579459U,	// DPADD_S_H
    1091582696U,	// DPADD_S_W
    1091578572U,	// DPADD_U_D
    1091579747U,	// DPADD_U_H
    1091583164U,	// DPADD_U_W
    16790015U,	// DPAQX_SA_W_PH
    16790098U,	// DPAQX_S_W_PH
    16791853U,	// DPAQ_SA_L_W
    16790057U,	// DPAQ_S_W_PH
    16790297U,	// DPAU_H_QBL
    16790593U,	// DPAU_H_QBR
    16790136U,	// DPAX_W_PH
    16790005U,	// DPA_W_PH
    16790030U,	// DPSQX_SA_W_PH
    16790112U,	// DPSQX_S_W_PH
    16791866U,	// DPSQ_SA_L_W
    16790085U,	// DPSQ_S_W_PH
    1091578116U,	// DPSUB_S_D
    1091579438U,	// DPSUB_S_H
    1091582663U,	// DPSUB_S_W
    1091578539U,	// DPSUB_U_D
    1091579726U,	// DPSUB_U_H
    1091583131U,	// DPSUB_U_W
    16790309U,	// DPSU_H_QBL
    16790605U,	// DPSU_H_QBR
    16790147U,	// DPSX_W_PH
    16790126U,	// DPS_W_PH
    553661662U,	// DROTR
    553656483U,	// DROTR32
    16791368U,	// DROTRV
    12373U,	// DSBH
    15955U,	// DSDIV
    11320U,	// DSHD
    553661355U,	// DSLL
    553656467U,	// DSLL32
    134230955U,	// DSLL64_32
    16791330U,	// DSLLV
    553656596U,	// DSRA
    553656449U,	// DSRA32
    16791315U,	// DSRAV
    553661361U,	// DSRL
    553656475U,	// DSRL32
    16791337U,	// DSRLV
    16791157U,	// DSUBu
    15941U,	// DUDIV
    15956U,	// DivRxRy16
    15942U,	// DivuRxRy16
    209569U,	// EI
    209569U,	// EI_MM
    7920U,	// ERET
    7920U,	// ERET_MM
    553664143U,	// EXT
    553661489U,	// EXTP
    553661421U,	// EXTPDP
    16791352U,	// EXTPDPV
    16791361U,	// EXTPV
    16792586U,	// EXTRV_RS_W
    16792140U,	// EXTRV_R_W
    16789235U,	// EXTRV_S_H
    16793023U,	// EXTRV_W
    553663487U,	// EXTR_RS_W
    553663031U,	// EXTR_R_W
    553660078U,	// EXTR_S_H
    553663130U,	// EXTR_W
    553664143U,	// EXT_MM
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    10740U,	// FABS_D32
    10740U,	// FABS_D64
    10740U,	// FABS_MM
    13770U,	// FABS_S
    13770U,	// FABS_S_MM
    0U,	// FABS_W
    16787017U,	// FADD_D
    16787018U,	// FADD_D32
    16787018U,	// FADD_D64
    16787018U,	// FADD_MM
    16790794U,	// FADD_S
    16790794U,	// FADD_S_MM
    16791488U,	// FADD_W
    16787197U,	// FCAF_D
    16791607U,	// FCAF_W
    16787560U,	// FCEQ_D
    16792046U,	// FCEQ_W
    10747U,	// FCLASS_D
    15382U,	// FCLASS_W
    16787085U,	// FCLE_D
    16791530U,	// FCLE_W
    16788007U,	// FCLT_D
    16792625U,	// FCLT_W
    425634U,	// FCMP_D32
    425634U,	// FCMP_D32_MM
    425634U,	// FCMP_D64
    491170U,	// FCMP_S32
    491170U,	// FCMP_S32_MM
    16787147U,	// FCNE_D
    16791564U,	// FCNE_W
    16787636U,	// FCOR_D
    16792175U,	// FCOR_W
    16787594U,	// FCUEQ_D
    16792062U,	// FCUEQ_W
    16787129U,	// FCULE_D
    16791546U,	// FCULE_W
    16788041U,	// FCULT_D
    16792641U,	// FCULT_W
    16787163U,	// FCUNE_D
    16791580U,	// FCUNE_W
    16787520U,	// FCUN_D
    16791952U,	// FCUN_W
    16788415U,	// FDIV_D
    16788416U,	// FDIV_D32
    16788416U,	// FDIV_D64
    16788416U,	// FDIV_MM
    16791044U,	// FDIV_S
    16791044U,	// FDIV_S_MM
    16793007U,	// FDIV_W
    16788893U,	// FEXDO_H
    16791968U,	// FEXDO_W
    16786920U,	// FEXP2_D
    0U,	// FEXP2_D_1_PSEUDO
    16791391U,	// FEXP2_W
    0U,	// FEXP2_W_1_PSEUDO
    10238U,	// FEXUPL_D
    14678U,	// FEXUPL_W
    10436U,	// FEXUPR_D
    14975U,	// FEXUPR_W
    10678U,	// FFINT_S_D
    15275U,	// FFINT_S_W
    11113U,	// FFINT_U_D
    15705U,	// FFINT_U_W
    10248U,	// FFQL_D
    14688U,	// FFQL_W
    10446U,	// FFQR_D
    14985U,	// FFQR_W
    8789U,	// FILL_B
    10223U,	// FILL_D
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    11638U,	// FILL_H
    14663U,	// FILL_W
    9695U,	// FLOG2_D
    14166U,	// FLOG2_W
    10194U,	// FLOOR_L_D64
    13692U,	// FLOOR_L_S
    11254U,	// FLOOR_W_D32
    11254U,	// FLOOR_W_D64
    11254U,	// FLOOR_W_MM
    13874U,	// FLOOR_W_S
    13874U,	// FLOOR_W_S_MM
    1091577425U,	// FMADD_D
    1091581896U,	// FMADD_W
    16786958U,	// FMAX_A_D
    16791429U,	// FMAX_A_W
    16788490U,	// FMAX_D
    16793032U,	// FMAX_W
    16786938U,	// FMIN_A_D
    16791409U,	// FMIN_A_W
    16787504U,	// FMIN_D
    16791944U,	// FMIN_W
    11215U,	// FMOV_D32
    11215U,	// FMOV_D32_MM
    11215U,	// FMOV_D64
    13835U,	// FMOV_S
    13835U,	// FMOV_S_MM
    1091577383U,	// FMSUB_D
    1091581854U,	// FMSUB_W
    16787488U,	// FMUL_D
    16787489U,	// FMUL_D32
    16787489U,	// FMUL_D64
    16787489U,	// FMUL_MM
    16790937U,	// FMUL_S
    16790937U,	// FMUL_S_MM
    16791928U,	// FMUL_W
    10022U,	// FNEG_D32
    10022U,	// FNEG_D64
    10022U,	// FNEG_MM
    13653U,	// FNEG_S
    13653U,	// FNEG_S_MM
    10328U,	// FRCP_D
    14761U,	// FRCP_W
    10851U,	// FRINT_D
    15451U,	// FRINT_W
    10879U,	// FRSQRT_D
    15479U,	// FRSQRT_W
    16787205U,	// FSAF_D
    16791615U,	// FSAF_W
    16787577U,	// FSEQ_D
    16792054U,	// FSEQ_W
    16787112U,	// FSLE_D
    16791538U,	// FSLE_W
    16788024U,	// FSLT_D
    16792633U,	// FSLT_W
    16787155U,	// FSNE_D
    16791572U,	// FSNE_W
    16787644U,	// FSOR_D
    16792183U,	// FSOR_W
    10870U,	// FSQRT_D
    10871U,	// FSQRT_D32
    10871U,	// FSQRT_D64
    10871U,	// FSQRT_MM
    13812U,	// FSQRT_S
    13812U,	// FSQRT_S_MM
    15470U,	// FSQRT_W
    16786975U,	// FSUB_D
    16786976U,	// FSUB_D32
    16786976U,	// FSUB_D64
    16786976U,	// FSUB_MM
    16790776U,	// FSUB_S
    16790776U,	// FSUB_S_MM
    16791446U,	// FSUB_W
    16787603U,	// FSUEQ_D
    16792071U,	// FSUEQ_W
    16787138U,	// FSULE_D
    16791555U,	// FSULE_W
    16788050U,	// FSULT_D
    16792650U,	// FSULT_W
    16787172U,	// FSUNE_D
    16791589U,	// FSUNE_W
    16787528U,	// FSUN_D
    16791960U,	// FSUN_W
    10689U,	// FTINT_S_D
    15286U,	// FTINT_S_W
    11124U,	// FTINT_U_D
    15716U,	// FTINT_U_W
    16788970U,	// FTQ_H
    16792080U,	// FTQ_W
    10511U,	// FTRUNC_S_D
    15058U,	// FTRUNC_S_W
    10934U,	// FTRUNC_U_D
    15526U,	// FTRUNC_U_W
    152056513U,	// GotPrologue16
    16787739U,	// HADD_S_D
    16789049U,	// HADD_S_H
    16792286U,	// HADD_S_W
    16788162U,	// HADD_U_D
    16789337U,	// HADD_U_H
    16792754U,	// HADD_U_W
    16787706U,	// HSUB_S_D
    16789028U,	// HSUB_S_H
    16792253U,	// HSUB_S_W
    16788129U,	// HSUB_U_D
    16789316U,	// HSUB_U_H
    16792721U,	// HSUB_U_W
    16786508U,	// ILVEV_B
    16788406U,	// ILVEV_D
    16789559U,	// ILVEV_H
    16792998U,	// ILVEV_W
    16786036U,	// ILVL_B
    16787496U,	// ILVL_D
    16788885U,	// ILVL_H
    16791936U,	// ILVL_W
    16785788U,	// ILVOD_B
    16787059U,	// ILVOD_D
    16788687U,	// ILVOD_H
    16791521U,	// ILVOD_W
    16786084U,	// ILVR_B
    16787679U,	// ILVR_D
    16789010U,	// ILVR_H
    16792226U,	// ILVR_W
    553664137U,	// INS
    3679091U,	// INSERT_B
    3680876U,	// INSERT_D
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    3682090U,	// INSERT_H
    3685476U,	// INSERT_W
    1062736U,	// INSV
    4727173U,	// INSVE_B
    4728557U,	// INSVE_D
    4730072U,	// INSVE_H
    4732974U,	// INSVE_W
    553664137U,	// INS_MM
    209640U,	// J
    209668U,	// JAL
    13518U,	// JALR
    13518U,	// JALR64
    0U,	// JALR64Pseudo
    0U,	// JALRPseudo
    13518U,	// JALR_MM
    209668U,	// JAL_MM
    210122U,	// JR
    210122U,	// JR64
    210122U,	// JR_MM
    209640U,	// J_MM
    602884U,	// Jal16
    668420U,	// JalB16
    7907U,	// JrRa16
    7898U,	// JrcRa16
    212537U,	// JrcRx16
    204801U,	// JumpLinkReg16
    5252207U,	// LB
    5252207U,	// LB64
    168836586U,	// LBUX
    5252207U,	// LB_MM
    5256816U,	// LBu
    5256816U,	// LBu64
    5256816U,	// LBu_MM
    5254207U,	// LD
    5251095U,	// LDC1
    5251095U,	// LDC164
    5251095U,	// LDC1_MM
    5251244U,	// LDC2
    8615U,	// LDI_B
    10038U,	// LDI_D
    11514U,	// LDI_H
    14513U,	// LDI_W
    5256032U,	// LDL
    5256328U,	// LDR
    168829015U,	// LDXC1
    168829015U,	// LDXC164
    5251437U,	// LD_B
    5252708U,	// LD_D
    5254336U,	// LD_H
    5257170U,	// LD_W
    2111133U,	// LEA_ADDiu
    2111132U,	// LEA_ADDiu64
    2111133U,	// LEA_ADDiu_MM
    5255270U,	// LH
    5255270U,	// LH64
    168836581U,	// LHX
    5255270U,	// LH_MM
    5256855U,	// LHu
    5256855U,	// LHu64
    5256855U,	// LHu_MM
    5256103U,	// LL
    5254206U,	// LLD
    5256103U,	// LL_MM
    5251079U,	// LOAD_ACC128
    5251079U,	// LOAD_ACC64
    5251079U,	// LOAD_ACC64DSP
    5256194U,	// LOAD_CCOND_DSP
    16785691U,	// LSA
    168829029U,	// LUXC1
    168829029U,	// LUXC164
    168829029U,	// LUXC1_MM
    6304483U,	// LUi
    6304483U,	// LUi64
    6304483U,	// LUi_MM
    5258717U,	// LW
    5258717U,	// LW64
    5251147U,	// LWC1
    5251147U,	// LWC1_MM
    5251270U,	// LWC2
    5256124U,	// LWL
    5256124U,	// LWL64
    5256124U,	// LWL_MM
    5256428U,	// LWR
    5256428U,	// LWR64
    5256428U,	// LWR_MM
    5256909U,	// LWU_MM
    168836592U,	// LWX
    168829043U,	// LWXC1
    168829043U,	// LWXC1_MM
    5258717U,	// LW_MM
    5256909U,	// LWu
    5252207U,	// LbRxRyOffMemX16
    5256816U,	// LbuRxRyOffMemX16
    5255270U,	// LhRxRyOffMemX16
    5256855U,	// LhuRxRyOffMemX16
    117453505U,	// LiRxImm16
    12983U,	// LiRxImmAlignX16
    12993U,	// LiRxImmX16
    6299870U,	// LoadAddr32Imm
    5251294U,	// LoadAddr32Reg
    6304449U,	// LoadImm32Reg
    736733U,	// LwConstant32
    33570269U,	// LwRxPcTcp16
    15837U,	// LwRxPcTcpX16
    5258717U,	// LwRxRyOffMemX16
    185613789U,	// LwRxSpImmX16
    11314U,	// MADD
    1091579342U,	// MADDR_Q_H
    1091582425U,	// MADDR_Q_W
    13962U,	// MADDU
    16791178U,	// MADDU_DSP
    13962U,	// MADDU_MM
    1091576890U,	// MADDV_B
    1091578788U,	// MADDV_D
    1091579941U,	// MADDV_H
    1091583380U,	// MADDV_W
    16787026U,	// MADD_D32
    16787026U,	// MADD_D32_MM
    16787026U,	// MADD_D64
    16788530U,	// MADD_DSP
    11314U,	// MADD_MM
    1091579312U,	// MADD_Q_H
    1091582395U,	// MADD_Q_W
    16790793U,	// MADD_S
    16790793U,	// MADD_S_MM
    16790378U,	// MAQ_SA_W_PHL
    16790674U,	// MAQ_SA_W_PHR
    16790406U,	// MAQ_S_W_PHL
    16790702U,	// MAQ_S_W_PHR
    16786159U,	// MAXI_S_B
    16787817U,	// MAXI_S_D
    16789127U,	// MAXI_S_H
    16792364U,	// MAXI_S_W
    285221830U,	// MAXI_U_B
    285223696U,	// MAXI_U_D
    285224871U,	// MAXI_U_H
    285228288U,	// MAXI_U_W
    16785740U,	// MAX_A_B
    16786959U,	// MAX_A_D
    16788639U,	// MAX_A_H
    16791430U,	// MAX_A_W
    16786247U,	// MAX_S_B
    16787937U,	// MAX_S_D
    16789246U,	// MAX_S_H
    16792545U,	// MAX_S_W
    16786462U,	// MAX_U_B
    16788360U,	// MAX_U_D
    16789513U,	// MAX_U_H
    16792952U,	// MAX_U_W
    553656330U,	// MFC0
    8234U,	// MFC1
    8234U,	// MFC1_MM
    553656505U,	// MFC2
    8240U,	// MFHC1
    8240U,	// MFHC1_MM
    209579U,	// MFHI
    209579U,	// MFHI64
    12971U,	// MFHI_DSP
    209579U,	// MFHI_MM
    209882U,	// MFLO
    209882U,	// MFLO64
    13274U,	// MFLO_DSP
    209882U,	// MFLO_MM
    16786139U,	// MINI_S_B
    16787797U,	// MINI_S_D
    16789107U,	// MINI_S_H
    16792344U,	// MINI_S_W
    285221810U,	// MINI_U_B
    285223676U,	// MINI_U_D
    285224851U,	// MINI_U_H
    285228268U,	// MINI_U_W
    16785721U,	// MIN_A_B
    16786939U,	// MIN_A_D
    16788620U,	// MIN_A_H
    16791410U,	// MIN_A_W
    16786169U,	// MIN_S_B
    16787827U,	// MIN_S_D
    16789137U,	// MIN_S_H
    16792384U,	// MIN_S_W
    16786384U,	// MIN_U_B
    16788250U,	// MIN_U_D
    16789425U,	// MIN_U_H
    16792842U,	// MIN_U_W
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    16786883U,	// MODSUB
    16786102U,	// MOD_S_B
    16787760U,	// MOD_S_D
    16789070U,	// MOD_S_H
    16792307U,	// MOD_S_W
    16786317U,	// MOD_U_B
    16788183U,	// MOD_U_D
    16789358U,	// MOD_U_H
    16792775U,	// MOD_U_W
    14041U,	// MOVE_V
    16787229U,	// MOVF_D32
    16787229U,	// MOVF_D32_MM
    16787229U,	// MOVF_D64
    16788600U,	// MOVF_I
    16788600U,	// MOVF_I64
    16788600U,	// MOVF_I_MM
    16790861U,	// MOVF_S
    16790861U,	// MOVF_S_MM
    16787536U,	// MOVN_I64_D64
    16790478U,	// MOVN_I64_I
    16790478U,	// MOVN_I64_I64
    16790952U,	// MOVN_I64_S
    16787536U,	// MOVN_I_D32
    16787536U,	// MOVN_I_D32_MM
    16787536U,	// MOVN_I_D64
    16790478U,	// MOVN_I_I
    16790478U,	// MOVN_I_I64
    16790478U,	// MOVN_I_MM
    16790952U,	// MOVN_I_S
    16790952U,	// MOVN_I_S_MM
    16788111U,	// MOVT_D32
    16788111U,	// MOVT_D32_MM
    16788111U,	// MOVT_D64
    16791146U,	// MOVT_I
    16791146U,	// MOVT_I64
    16791146U,	// MOVT_I_MM
    16791036U,	// MOVT_S
    16791036U,	// MOVT_S_MM
    16788511U,	// MOVZ_I64_D64
    16793133U,	// MOVZ_I64_I
    16793133U,	// MOVZ_I64_I64
    16791110U,	// MOVZ_I64_S
    16788511U,	// MOVZ_I_D32
    16788511U,	// MOVZ_I_D32_MM
    16788511U,	// MOVZ_I_D64
    16793133U,	// MOVZ_I_I
    16793133U,	// MOVZ_I_I64
    16793133U,	// MOVZ_I_MM
    16791110U,	// MOVZ_I_S
    16791110U,	// MOVZ_I_S_MM
    9675U,	// MSUB
    1091579331U,	// MSUBR_Q_H
    1091582414U,	// MSUBR_Q_W
    13948U,	// MSUBU
    16791164U,	// MSUBU_DSP
    13948U,	// MSUBU_MM
    1091576881U,	// MSUBV_B
    1091578779U,	// MSUBV_D
    1091579932U,	// MSUBV_H
    1091583371U,	// MSUBV_W
    16786984U,	// MSUB_D32
    16786984U,	// MSUB_D32_MM
    16786984U,	// MSUB_D64
    16786891U,	// MSUB_DSP
    9675U,	// MSUB_MM
    1091579302U,	// MSUB_Q_H
    1091582385U,	// MSUB_Q_W
    16790775U,	// MSUB_S
    16790775U,	// MSUB_S_MM
    553656337U,	// MTC0
    344133U,	// MTC1
    344133U,	// MTC1_MM
    553656512U,	// MTC2
    344119U,	// MTHC1
    344119U,	// MTHC1_MM
    209585U,	// MTHI
    209585U,	// MTHI64
    348849U,	// MTHI_DSP
    209585U,	// MTHI_MM
    349173U,	// MTHLIP
    209895U,	// MTLO
    209895U,	// MTLO64
    349159U,	// MTLO_DSP
    209895U,	// MTLO_MM
    16790455U,	// MUL
    16790419U,	// MULEQ_S_W_PHL
    16790715U,	// MULEQ_S_W_PHR
    16790321U,	// MULEU_S_PH_QBL
    16790617U,	// MULEU_S_PH_QBR
    16789924U,	// MULQ_RS_PH
    16792564U,	// MULQ_RS_W
    16789868U,	// MULQ_S_PH
    16792423U,	// MULQ_S_W
    16788953U,	// MULR_Q_H
    16792036U,	// MULR_Q_W
    16790070U,	// MULSAQ_S_W_PH
    16790045U,	// MULSA_W_PH
    13919U,	// MULT
    16791238U,	// MULTU_DSP
    16791135U,	// MULT_DSP
    13919U,	// MULT_MM
    14022U,	// MULTu
    14022U,	// MULTu_MM
    16786517U,	// MULV_B
    16788423U,	// MULV_D
    16789568U,	// MULV_H
    16793015U,	// MULV_W
    16790455U,	// MUL_MM
    16789741U,	// MUL_PH
    16788922U,	// MUL_Q_H
    16792005U,	// MUL_Q_W
    16789836U,	// MUL_S_PH
    209579U,	// Mfhi16
    209882U,	// Mflo16
    11372U,	// Move32R16
    11372U,	// MoveR3216
    13919U,	// MultRxRy16
    8148575U,	// MultRxRyRz16
    14022U,	// MultuRxRy16
    8148678U,	// MultuRxRyRz16
    8540U,	// NLOC_B
    9785U,	// NLOC_D
    11439U,	// NLOC_H
    14247U,	// NLOC_W
    8548U,	// NLZC_B
    9793U,	// NLZC_D
    11447U,	// NLZC_H
    14255U,	// NLZC_W
    16787034U,	// NMADD_D32
    16787034U,	// NMADD_D32_MM
    16787034U,	// NMADD_D64
    16790792U,	// NMADD_S
    16790792U,	// NMADD_S_MM
    16786992U,	// NMSUB_D32
    16786992U,	// NMSUB_D32_MM
    16786992U,	// NMSUB_D64
    16790774U,	// NMSUB_S
    16790774U,	// NMSUB_S_MM
    0U,	// NOP
    16790740U,	// NOR
    16790740U,	// NOR64
    285221381U,	// NORI_B
    16790740U,	// NOR_MM
    16791273U,	// NOR_V
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    11390U,	// NegRxRy16
    13925U,	// NotRxRy16
    16790741U,	// OR
    16790741U,	// OR64
    285221382U,	// ORI_B
    16790741U,	// OR_MM
    16791274U,	// OR_V
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    553661138U,	// ORi
    553661138U,	// ORi64
    553661138U,	// ORi_MM
    1062101U,	// OrRxRxRy16
    16789730U,	// PACKRL_PH
    16786499U,	// PCKEV_B
    16788397U,	// PCKEV_D
    16789550U,	// PCKEV_H
    16792989U,	// PCKEV_W
    16785779U,	// PCKOD_B
    16787050U,	// PCKOD_D
    16788678U,	// PCKOD_H
    16791512U,	// PCKOD_W
    9067U,	// PCNT_B
    10843U,	// PCNT_D
    12066U,	// PCNT_H
    15443U,	// PCNT_W
    16789694U,	// PICK_PH
    16786615U,	// PICK_QB
    13136U,	// PRECEQU_PH_QBL
    8418U,	// PRECEQU_PH_QBLA
    13432U,	// PRECEQU_PH_QBR
    8451U,	// PRECEQU_PH_QBRA
    13176U,	// PRECEQ_W_PHL
    13472U,	// PRECEQ_W_PHR
    13121U,	// PRECEU_PH_QBL
    8402U,	// PRECEU_PH_QBLA
    13417U,	// PRECEU_PH_QBR
    8435U,	// PRECEU_PH_QBRA
    16789646U,	// PRECRQU_S_QB_PH
    16791655U,	// PRECRQ_PH_W
    16789619U,	// PRECRQ_QB_PH
    16791686U,	// PRECRQ_RS_PH_W
    16789633U,	// PRECR_QB_PH
    553662551U,	// PRECR_SRA_PH_W
    553662580U,	// PRECR_SRA_R_PH_W
    553659464U,	// PREPEND
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    8199U,	// PseudoCVT_D32_W
    8199U,	// PseudoCVT_D64_L
    8199U,	// PseudoCVT_D64_W
    8199U,	// PseudoCVT_S_L
    8199U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMULT
    0U,	// PseudoMULTu
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoSDIV
    0U,	// PseudoUDIV
    9651U,	// RADDU_W_QB
    6304803U,	// RDDSP
    13541U,	// RDHWR
    13541U,	// RDHWR64
    12769U,	// REPLV_PH
    9631U,	// REPLV_QB
    6303952U,	// REPL_PH
    6300873U,	// REPL_QB
    210122U,	// RET
    210122U,	// RET_MM
    553661663U,	// ROTR
    16791369U,	// ROTRV
    16791369U,	// ROTRV_MM
    553661663U,	// ROTR_MM
    10173U,	// ROUND_L_D64
    13671U,	// ROUND_L_S
    11233U,	// ROUND_W_D32
    11233U,	// ROUND_W_D64
    11233U,	// ROUND_W_MM
    13853U,	// ROUND_W_S
    13853U,	// ROUND_W_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    0U,	// RetRA
    0U,	// RetRA16
    285221664U,	// SAT_S_B
    553658788U,	// SAT_S_D
    285224652U,	// SAT_S_H
    553663385U,	// SAT_S_W
    285221891U,	// SAT_U_B
    553659223U,	// SAT_U_D
    285224942U,	// SAT_U_H
    553663815U,	// SAT_U_W
    5252543U,	// SB
    5252543U,	// SB64
    5252543U,	// SB_MM
    869844U,	// SC
    871463U,	// SCD
    5252564U,	// SC_MM
    5254233U,	// SD
    5251101U,	// SDC1
    5251101U,	// SDC164
    5251101U,	// SDC1_MM
    5251250U,	// SDC2
    15956U,	// SDIV
    15956U,	// SDIV_MM
    5256037U,	// SDL
    5256333U,	// SDR
    168829022U,	// SDXC1
    168829022U,	// SDXC164
    9322U,	// SEB
    9322U,	// SEB64
    9322U,	// SEB_MM
    12385U,	// SEH
    12385U,	// SEH64
    12385U,	// SEH_MM
    5255822U,	// SH
    5255822U,	// SH64
    285221263U,	// SHF_B
    285224162U,	// SHF_H
    285227080U,	// SHF_W
    13280U,	// SHILO
    14128U,	// SHILOV
    16789975U,	// SHLLV_PH
    16786837U,	// SHLLV_QB
    16789912U,	// SHLLV_S_PH
    16792534U,	// SHLLV_S_W
    553660615U,	// SHLL_PH
    553657536U,	// SHLL_QB
    553660737U,	// SHLL_S_PH
    553663286U,	// SHLL_S_W
    16789965U,	// SHRAV_PH
    16786827U,	// SHRAV_QB
    16789813U,	// SHRAV_R_PH
    16786725U,	// SHRAV_R_QB
    16792129U,	// SHRAV_R_W
    553660522U,	// SHRA_PH
    553657459U,	// SHRA_QB
    553660690U,	// SHRA_R_PH
    553657602U,	// SHRA_R_QB
    553662999U,	// SHRA_R_W
    16789995U,	// SHRLV_PH
    16786857U,	// SHRLV_QB
    553660633U,	// SHRL_PH
    553657554U,	// SHRL_QB
    5255822U,	// SH_MM
    3054510502U,	// SLDI_B
    3054511925U,	// SLDI_D
    3054513401U,	// SLDI_H
    3054516400U,	// SLDI_W
    3322945900U,	// SLD_B
    3322947171U,	// SLD_D
    3322948799U,	// SLD_H
    3322951633U,	// SLD_W
    553661356U,	// SLL
    201339820U,	// SLL64_32
    201339820U,	// SLL64_64
    285221320U,	// SLLI_B
    285222726U,	// SLLI_D
    285224202U,	// SLLI_H
    285227201U,	// SLLI_W
    16791331U,	// SLLV
    16791331U,	// SLLV_MM
    16786013U,	// SLL_B
    16787447U,	// SLL_D
    16788862U,	// SLL_H
    553661356U,	// SLL_MM
    16791887U,	// SLL_W
    16791124U,	// SLT
    16791124U,	// SLT64
    16791124U,	// SLT_MM
    16790231U,	// SLTi
    16790231U,	// SLTi64
    16790231U,	// SLTi_MM
    16791211U,	// SLTiu
    16791211U,	// SLTiu64
    16791211U,	// SLTiu_MM
    16791225U,	// SLTu
    16791225U,	// SLTu64
    16791225U,	// SLTu_MM
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    2516591135U,	// SPLATI_B
    2516592525U,	// SPLATI_D
    2516594001U,	// SPLATI_H
    2516597000U,	// SPLATI_W
    2248155994U,	// SPLAT_B
    2248157701U,	// SPLAT_D
    2248158993U,	// SPLAT_H
    2248162336U,	// SPLAT_W
    553656597U,	// SRA
    285221278U,	// SRAI_B
    285222701U,	// SRAI_D
    285224177U,	// SRAI_H
    285227176U,	// SRAI_W
    285221354U,	// SRARI_B
    553658216U,	// SRARI_D
    285224236U,	// SRARI_H
    553662691U,	// SRARI_W
    16786051U,	// SRAR_B
    16787612U,	// SRAR_D
    16788977U,	// SRAR_H
    16792151U,	// SRAR_W
    16791316U,	// SRAV
    16791316U,	// SRAV_MM
    16785749U,	// SRA_B
    16786968U,	// SRA_D
    16788648U,	// SRA_H
    553656597U,	// SRA_MM
    16791439U,	// SRA_W
    553661362U,	// SRL
    285221328U,	// SRLI_B
    285222734U,	// SRLI_D
    285224210U,	// SRLI_H
    285227209U,	// SRLI_W
    285221372U,	// SRLRI_B
    553658234U,	// SRLRI_D
    285224254U,	// SRLRI_H
    553662709U,	// SRLRI_W
    16786067U,	// SRLR_B
    16787628U,	// SRLR_D
    16788993U,	// SRLR_H
    16792167U,	// SRLR_W
    16791338U,	// SRLV
    16791338U,	// SRLV_MM
    16786020U,	// SRL_B
    16787472U,	// SRL_D
    16788869U,	// SRL_H
    553661362U,	// SRL_MM
    16791912U,	// SRL_W
    5251079U,	// STORE_ACC128
    5251079U,	// STORE_ACC64
    5251079U,	// STORE_ACC64DSP
    5256210U,	// STORE_CCOND_DSP
    5251965U,	// ST_B
    5253769U,	// ST_D
    5254964U,	// ST_H
    5258369U,	// ST_W
    16786886U,	// SUB
    16789674U,	// SUBQH_PH
    16789789U,	// SUBQH_R_PH
    16792097U,	// SUBQH_R_W
    16791702U,	// SUBQH_W
    16789749U,	// SUBQ_PH
    16789846U,	// SUBQ_S_PH
    16792403U,	// SUBQ_S_W
    16786423U,	// SUBSUS_U_B
    16788299U,	// SUBSUS_U_D
    16789474U,	// SUBSUS_U_H
    16792891U,	// SUBSUS_U_W
    16786226U,	// SUBSUU_S_B
    16787916U,	// SUBSUU_S_D
    16789214U,	// SUBSUU_S_H
    16792513U,	// SUBSUU_S_W
    16786188U,	// SUBS_S_B
    16787856U,	// SUBS_S_D
    16789176U,	// SUBS_S_H
    16792453U,	// SUBS_S_W
    16786403U,	// SUBS_U_B
    16788279U,	// SUBS_U_D
    16789454U,	// SUBS_U_H
    16792871U,	// SUBS_U_W
    16786595U,	// SUBUH_QB
    16786701U,	// SUBUH_R_QB
    16789947U,	// SUBU_PH
    16786809U,	// SUBU_QB
    16789890U,	// SUBU_S_PH
    16786748U,	// SUBU_S_QB
    285221426U,	// SUBVI_B
    285222816U,	// SUBVI_D
    285224292U,	// SUBVI_H
    285227291U,	// SUBVI_W
    16786482U,	// SUBV_B
    16788380U,	// SUBV_D
    16789533U,	// SUBV_H
    16792972U,	// SUBV_W
    16786886U,	// SUB_MM
    16791158U,	// SUBu
    16791158U,	// SUBu_MM
    168829036U,	// SUXC1
    168829036U,	// SUXC164
    168829036U,	// SUXC1_MM
    5258721U,	// SW
    5258721U,	// SW64
    5251153U,	// SWC1
    5251153U,	// SWC1_MM
    5251276U,	// SWC2
    5256129U,	// SWL
    5256129U,	// SWL64
    5256129U,	// SWL_MM
    5256433U,	// SWR
    5256433U,	// SWR64
    5256433U,	// SWR_MM
    168829050U,	// SWXC1
    168829050U,	// SWXC1_MM
    5258721U,	// SW_MM
    212588U,	// SYNC
    212588U,	// SYNC_MM
    209826U,	// SYSCALL
    209826U,	// SYSCALL_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    0U,	// Save16
    0U,	// SaveX16
    5252543U,	// SbRxRyOffMemX16
    212531U,	// SebRx16
    212543U,	// SehRx16
    957972U,	// SelBeqZ
    957953U,	// SelBneZ
    226530301U,	// SelTBteqZCmp
    226529989U,	// SelTBteqZCmpi
    226530900U,	// SelTBteqZSlt
    226530007U,	// SelTBteqZSlti
    226530987U,	// SelTBteqZSltiu
    226531001U,	// SelTBteqZSltu
    243307517U,	// SelTBtneZCmp
    243307205U,	// SelTBtneZCmpi
    243308116U,	// SelTBtneZSlt
    243307223U,	// SelTBtneZSlti
    243308203U,	// SelTBtneZSltiu
    243308217U,	// SelTBtneZSltu
    5255822U,	// ShRxRyOffMemX16
    553661356U,	// SllX16
    1062691U,	// SllvRxRy16
    10245716U,	// SltCCRxRy16
    13908U,	// SltRxRy16
    10244823U,	// SltiCCRxImmX16
    117453527U,	// SltiRxImm16
    13015U,	// SltiRxImmX16
    10245803U,	// SltiuCCRxImmX16
    117454507U,	// SltiuRxImm16
    13995U,	// SltiuRxImmX16
    10245817U,	// SltuCCRxRy16
    14009U,	// SltuRxRy16
    10245817U,	// SltuRxRyRz16
    553656597U,	// SraX16
    1062676U,	// SravRxRy16
    553661362U,	// SrlX16
    1062698U,	// SrlvRxRy16
    16791158U,	// SubuRxRyRz16
    5258721U,	// SwRxRyOffMemX16
    185613793U,	// SwRxSpImmX16
    0U,	// TAILCALL
    0U,	// TAILCALL64_R
    0U,	// TAILCALL_R
    553661500U,	// TEQ
    6304459U,	// TEQI
    6304459U,	// TEQI_MM
    553661500U,	// TEQ_MM
    553659485U,	// TGE
    6304415U,	// TGEI
    6305444U,	// TGEIU
    6305444U,	// TGEIU_MM
    6304415U,	// TGEI_MM
    553662097U,	// TGEU
    553662097U,	// TGEU_MM
    553659485U,	// TGE_MM
    553662041U,	// TLT
    6304477U,	// TLTI
    6305458U,	// TLTIU_MM
    6304477U,	// TLTI_MM
    553662143U,	// TLTU
    553662143U,	// TLTU_MM
    553662041U,	// TLT_MM
    553659495U,	// TNE
    6304421U,	// TNEI
    6304421U,	// TNEI_MM
    553659495U,	// TNE_MM
    0U,	// TRAP
    10162U,	// TRUNC_L_D64
    13660U,	// TRUNC_L_S
    11222U,	// TRUNC_W_D32
    11222U,	// TRUNC_W_D64
    11222U,	// TRUNC_W_MM
    13842U,	// TRUNC_W_S
    13842U,	// TRUNC_W_S_MM
    6305458U,	// TTLTIU
    15942U,	// UDIV
    15942U,	// UDIV_MM
    1091576206U,	// VSHF_B
    1091577613U,	// VSHF_D
    1091579105U,	// VSHF_H
    1091582023U,	// VSHF_W
    7925U,	// WAIT
    7925U,	// WAIT_MM
    6304810U,	// WRDSP
    12379U,	// WSBH
    12379U,	// WSBH_MM
    16790745U,	// XOR
    16790745U,	// XOR64
    285221389U,	// XORI_B
    16790745U,	// XOR_MM
    16791280U,	// XOR_V
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    553661137U,	// XORi
    553661137U,	// XORi64
    553661137U,	// XORi_MM
    1062105U,	// XorRxRxRy16
    0U
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    0U,	// ABSQ_S_PH
    0U,	// ABSQ_S_QB
    0U,	// ABSQ_S_W
    0U,	// ADD
    0U,	// ADDQH_PH
    0U,	// ADDQH_R_PH
    0U,	// ADDQH_R_W
    0U,	// ADDQH_W
    0U,	// ADDQ_PH
    0U,	// ADDQ_S_PH
    0U,	// ADDQ_S_W
    0U,	// ADDSC
    0U,	// ADDS_A_B
    0U,	// ADDS_A_D
    0U,	// ADDS_A_H
    0U,	// ADDS_A_W
    0U,	// ADDS_S_B
    0U,	// ADDS_S_D
    0U,	// ADDS_S_H
    0U,	// ADDS_S_W
    0U,	// ADDS_U_B
    0U,	// ADDS_U_D
    0U,	// ADDS_U_H
    0U,	// ADDS_U_W
    0U,	// ADDUH_QB
    0U,	// ADDUH_R_QB
    0U,	// ADDU_PH
    0U,	// ADDU_QB
    0U,	// ADDU_S_PH
    0U,	// ADDU_S_QB
    0U,	// ADDVI_B
    0U,	// ADDVI_D
    0U,	// ADDVI_H
    0U,	// ADDVI_W
    0U,	// ADDV_B
    0U,	// ADDV_D
    0U,	// ADDV_H
    0U,	// ADDV_W
    0U,	// ADDWC
    0U,	// ADD_A_B
    0U,	// ADD_A_D
    0U,	// ADD_A_H
    0U,	// ADD_A_W
    0U,	// ADD_MM
    0U,	// ADDi
    0U,	// ADDi_MM
    0U,	// ADDiu
    0U,	// ADDiu_MM
    0U,	// ADDu
    0U,	// ADDu_MM
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND64
    0U,	// ANDI_B
    0U,	// AND_MM
    0U,	// AND_V
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    0U,	// ANDi
    0U,	// ANDi64
    0U,	// ANDi_MM
    0U,	// APPEND
    0U,	// ASUB_S_B
    0U,	// ASUB_S_D
    0U,	// ASUB_S_H
    0U,	// ASUB_S_W
    0U,	// ASUB_U_B
    0U,	// ASUB_U_D
    0U,	// ASUB_U_H
    0U,	// ASUB_U_W
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// AVER_S_B
    0U,	// AVER_S_D
    0U,	// AVER_S_H
    0U,	// AVER_S_W
    0U,	// AVER_U_B
    0U,	// AVER_U_D
    0U,	// AVER_U_H
    0U,	// AVER_U_W
    0U,	// AVE_S_B
    0U,	// AVE_S_D
    0U,	// AVE_S_H
    0U,	// AVE_S_W
    0U,	// AVE_U_B
    0U,	// AVE_U_D
    0U,	// AVE_U_H
    0U,	// AVE_U_W
    0U,	// AddiuRxImmX16
    0U,	// AddiuRxPcImmX16
    0U,	// AddiuRxRxImm16
    0U,	// AddiuRxRxImmX16
    0U,	// AddiuRxRyOffMemX16
    0U,	// AddiuSpImm16
    0U,	// AddiuSpImmX16
    0U,	// AdduRxRyRz16
    0U,	// AndRxRxRy16
    0U,	// B
    0U,	// BALIGN
    0U,	// BAL_BR
    0U,	// BC1F
    0U,	// BC1F_MM
    0U,	// BC1T
    0U,	// BC1T_MM
    0U,	// BCLRI_B
    0U,	// BCLRI_D
    0U,	// BCLRI_H
    0U,	// BCLRI_W
    0U,	// BCLR_B
    0U,	// BCLR_D
    0U,	// BCLR_H
    0U,	// BCLR_W
    0U,	// BEQ
    0U,	// BEQ64
    0U,	// BEQ_MM
    0U,	// BGEZ
    0U,	// BGEZ64
    0U,	// BGEZAL
    0U,	// BGEZAL_MM
    0U,	// BGEZ_MM
    0U,	// BGTZ
    0U,	// BGTZ64
    0U,	// BGTZ_MM
    0U,	// BINSLI_B
    0U,	// BINSLI_D
    0U,	// BINSLI_H
    0U,	// BINSLI_W
    0U,	// BINSL_B
    0U,	// BINSL_D
    0U,	// BINSL_H
    0U,	// BINSL_W
    0U,	// BINSRI_B
    0U,	// BINSRI_D
    0U,	// BINSRI_H
    0U,	// BINSRI_W
    0U,	// BINSR_B
    0U,	// BINSR_D
    0U,	// BINSR_H
    0U,	// BINSR_W
    0U,	// BITREV
    0U,	// BLEZ
    0U,	// BLEZ64
    0U,	// BLEZ_MM
    0U,	// BLTZ
    0U,	// BLTZ64
    0U,	// BLTZAL
    0U,	// BLTZAL_MM
    0U,	// BLTZ_MM
    0U,	// BMNZI_B
    0U,	// BMNZ_V
    0U,	// BMZI_B
    0U,	// BMZ_V
    0U,	// BNE
    0U,	// BNE64
    0U,	// BNEGI_B
    0U,	// BNEGI_D
    0U,	// BNEGI_H
    0U,	// BNEGI_W
    0U,	// BNEG_B
    0U,	// BNEG_D
    0U,	// BNEG_H
    0U,	// BNEG_W
    0U,	// BNE_MM
    0U,	// BNZ_B
    0U,	// BNZ_D
    0U,	// BNZ_H
    0U,	// BNZ_V
    0U,	// BNZ_W
    0U,	// BPOSGE32
    0U,	// BPOSGE32_PSEUDO
    0U,	// BREAK
    0U,	// BREAK_MM
    0U,	// BSELI_B
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    0U,	// BSEL_V
    0U,	// BSEL_W_PSEUDO
    0U,	// BSETI_B
    0U,	// BSETI_D
    0U,	// BSETI_H
    0U,	// BSETI_W
    0U,	// BSET_B
    0U,	// BSET_D
    0U,	// BSET_H
    0U,	// BSET_W
    0U,	// BZ_B
    0U,	// BZ_D
    0U,	// BZ_H
    0U,	// BZ_V
    0U,	// BZ_W
    0U,	// BeqzRxImm16
    0U,	// BeqzRxImmX16
    0U,	// Bimm16
    0U,	// BimmX16
    0U,	// BnezRxImm16
    0U,	// BnezRxImmX16
    0U,	// Break16
    0U,	// Bteqz16
    0U,	// BteqzT8CmpX16
    0U,	// BteqzT8CmpiX16
    0U,	// BteqzT8SltX16
    0U,	// BteqzT8SltiX16
    0U,	// BteqzT8SltiuX16
    0U,	// BteqzT8SltuX16
    0U,	// BteqzX16
    0U,	// Btnez16
    0U,	// BtnezT8CmpX16
    0U,	// BtnezT8CmpiX16
    0U,	// BtnezT8SltX16
    0U,	// BtnezT8SltiX16
    0U,	// BtnezT8SltiuX16
    0U,	// BtnezT8SltuX16
    0U,	// BtnezX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    0U,	// CEIL_L_D64
    0U,	// CEIL_L_S
    0U,	// CEIL_W_D32
    0U,	// CEIL_W_D64
    0U,	// CEIL_W_MM
    0U,	// CEIL_W_S
    0U,	// CEIL_W_S_MM
    0U,	// CEQI_B
    0U,	// CEQI_D
    0U,	// CEQI_H
    0U,	// CEQI_W
    0U,	// CEQ_B
    0U,	// CEQ_D
    0U,	// CEQ_H
    0U,	// CEQ_W
    0U,	// CFC1
    0U,	// CFC1_MM
    0U,	// CFCMSA
    0U,	// CLEI_S_B
    0U,	// CLEI_S_D
    0U,	// CLEI_S_H
    0U,	// CLEI_S_W
    0U,	// CLEI_U_B
    0U,	// CLEI_U_D
    0U,	// CLEI_U_H
    0U,	// CLEI_U_W
    0U,	// CLE_S_B
    0U,	// CLE_S_D
    0U,	// CLE_S_H
    0U,	// CLE_S_W
    0U,	// CLE_U_B
    0U,	// CLE_U_D
    0U,	// CLE_U_H
    0U,	// CLE_U_W
    0U,	// CLO
    0U,	// CLO_MM
    0U,	// CLTI_S_B
    0U,	// CLTI_S_D
    0U,	// CLTI_S_H
    0U,	// CLTI_S_W
    0U,	// CLTI_U_B
    0U,	// CLTI_U_D
    0U,	// CLTI_U_H
    0U,	// CLTI_U_W
    0U,	// CLT_S_B
    0U,	// CLT_S_D
    0U,	// CLT_S_H
    0U,	// CLT_S_W
    0U,	// CLT_U_B
    0U,	// CLT_U_D
    0U,	// CLT_U_H
    0U,	// CLT_U_W
    0U,	// CLZ
    0U,	// CLZ_MM
    0U,	// CMPGDU_EQ_QB
    0U,	// CMPGDU_LE_QB
    0U,	// CMPGDU_LT_QB
    0U,	// CMPGU_EQ_QB
    0U,	// CMPGU_LE_QB
    0U,	// CMPGU_LT_QB
    0U,	// CMPU_EQ_QB
    0U,	// CMPU_LE_QB
    0U,	// CMPU_LT_QB
    0U,	// CMP_EQ_PH
    0U,	// CMP_LE_PH
    0U,	// CMP_LT_PH
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    0U,	// COPY_S_B
    0U,	// COPY_S_D
    0U,	// COPY_S_H
    0U,	// COPY_S_W
    0U,	// COPY_U_B
    0U,	// COPY_U_D
    0U,	// COPY_U_H
    0U,	// COPY_U_W
    0U,	// CTC1
    0U,	// CTC1_MM
    0U,	// CTCMSA
    0U,	// CVT_D32_S
    0U,	// CVT_D32_W
    0U,	// CVT_D32_W_MM
    0U,	// CVT_D64_L
    0U,	// CVT_D64_S
    0U,	// CVT_D64_W
    0U,	// CVT_D_S_MM
    0U,	// CVT_L_D64
    0U,	// CVT_L_D64_MM
    0U,	// CVT_L_S
    0U,	// CVT_L_S_MM
    0U,	// CVT_S_D32
    0U,	// CVT_S_D32_MM
    0U,	// CVT_S_D64
    0U,	// CVT_S_L
    0U,	// CVT_S_W
    0U,	// CVT_S_W_MM
    0U,	// CVT_W_D32
    0U,	// CVT_W_D64
    0U,	// CVT_W_MM
    0U,	// CVT_W_S
    0U,	// CVT_W_S_MM
    0U,	// C_EQ_D32
    0U,	// C_EQ_D64
    0U,	// C_EQ_S
    0U,	// C_F_D32
    0U,	// C_F_D64
    0U,	// C_F_S
    0U,	// C_LE_D32
    0U,	// C_LE_D64
    0U,	// C_LE_S
    0U,	// C_LT_D32
    0U,	// C_LT_D64
    0U,	// C_LT_S
    0U,	// C_NGE_D32
    0U,	// C_NGE_D64
    0U,	// C_NGE_S
    0U,	// C_NGLE_D32
    0U,	// C_NGLE_D64
    0U,	// C_NGLE_S
    0U,	// C_NGL_D32
    0U,	// C_NGL_D64
    0U,	// C_NGL_S
    0U,	// C_NGT_D32
    0U,	// C_NGT_D64
    0U,	// C_NGT_S
    0U,	// C_OLE_D32
    0U,	// C_OLE_D64
    0U,	// C_OLE_S
    0U,	// C_OLT_D32
    0U,	// C_OLT_D64
    0U,	// C_OLT_S
    0U,	// C_SEQ_D32
    0U,	// C_SEQ_D64
    0U,	// C_SEQ_S
    0U,	// C_SF_D32
    0U,	// C_SF_D64
    0U,	// C_SF_S
    0U,	// C_UEQ_D32
    0U,	// C_UEQ_D64
    0U,	// C_UEQ_S
    0U,	// C_ULE_D32
    0U,	// C_ULE_D64
    0U,	// C_ULE_S
    0U,	// C_ULT_D32
    0U,	// C_ULT_D64
    0U,	// C_ULT_S
    0U,	// C_UN_D32
    0U,	// C_UN_D64
    0U,	// C_UN_S
    0U,	// CmpRxRy16
    0U,	// CmpiRxImm16
    0U,	// CmpiRxImmX16
    0U,	// Constant32
    0U,	// DADD
    0U,	// DADDi
    0U,	// DADDiu
    0U,	// DADDu
    0U,	// DCLO
    0U,	// DCLZ
    0U,	// DERET
    0U,	// DERET_MM
    1U,	// DEXT
    1U,	// DEXTM
    1U,	// DEXTU
    0U,	// DI
    1U,	// DINS
    1U,	// DINSM
    1U,	// DINSU
    0U,	// DIV_S_B
    0U,	// DIV_S_D
    0U,	// DIV_S_H
    0U,	// DIV_S_W
    0U,	// DIV_U_B
    0U,	// DIV_U_D
    0U,	// DIV_U_H
    0U,	// DIV_U_W
    0U,	// DI_MM
    3U,	// DLSA
    0U,	// DMFC0
    0U,	// DMFC1
    0U,	// DMFC2
    0U,	// DMTC0
    0U,	// DMTC1
    0U,	// DMTC2
    0U,	// DMULT
    0U,	// DMULTu
    0U,	// DOTP_S_D
    0U,	// DOTP_S_H
    0U,	// DOTP_S_W
    0U,	// DOTP_U_D
    0U,	// DOTP_U_H
    0U,	// DOTP_U_W
    0U,	// DPADD_S_D
    0U,	// DPADD_S_H
    0U,	// DPADD_S_W
    0U,	// DPADD_U_D
    0U,	// DPADD_U_H
    0U,	// DPADD_U_W
    0U,	// DPAQX_SA_W_PH
    0U,	// DPAQX_S_W_PH
    0U,	// DPAQ_SA_L_W
    0U,	// DPAQ_S_W_PH
    0U,	// DPAU_H_QBL
    0U,	// DPAU_H_QBR
    0U,	// DPAX_W_PH
    0U,	// DPA_W_PH
    0U,	// DPSQX_SA_W_PH
    0U,	// DPSQX_S_W_PH
    0U,	// DPSQ_SA_L_W
    0U,	// DPSQ_S_W_PH
    0U,	// DPSUB_S_D
    0U,	// DPSUB_S_H
    0U,	// DPSUB_S_W
    0U,	// DPSUB_U_D
    0U,	// DPSUB_U_H
    0U,	// DPSUB_U_W
    0U,	// DPSU_H_QBL
    0U,	// DPSU_H_QBR
    0U,	// DPSX_W_PH
    0U,	// DPS_W_PH
    0U,	// DROTR
    0U,	// DROTR32
    0U,	// DROTRV
    0U,	// DSBH
    0U,	// DSDIV
    0U,	// DSHD
    0U,	// DSLL
    0U,	// DSLL32
    0U,	// DSLL64_32
    0U,	// DSLLV
    0U,	// DSRA
    0U,	// DSRA32
    0U,	// DSRAV
    0U,	// DSRL
    0U,	// DSRL32
    0U,	// DSRLV
    0U,	// DSUBu
    0U,	// DUDIV
    0U,	// DivRxRy16
    0U,	// DivuRxRy16
    0U,	// EI
    0U,	// EI_MM
    0U,	// ERET
    0U,	// ERET_MM
    1U,	// EXT
    0U,	// EXTP
    0U,	// EXTPDP
    0U,	// EXTPDPV
    0U,	// EXTPV
    0U,	// EXTRV_RS_W
    0U,	// EXTRV_R_W
    0U,	// EXTRV_S_H
    0U,	// EXTRV_W
    0U,	// EXTR_RS_W
    0U,	// EXTR_R_W
    0U,	// EXTR_S_H
    0U,	// EXTR_W
    1U,	// EXT_MM
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    0U,	// FABS_D32
    0U,	// FABS_D64
    0U,	// FABS_MM
    0U,	// FABS_S
    0U,	// FABS_S_MM
    0U,	// FABS_W
    0U,	// FADD_D
    0U,	// FADD_D32
    0U,	// FADD_D64
    0U,	// FADD_MM
    0U,	// FADD_S
    0U,	// FADD_S_MM
    0U,	// FADD_W
    0U,	// FCAF_D
    0U,	// FCAF_W
    0U,	// FCEQ_D
    0U,	// FCEQ_W
    0U,	// FCLASS_D
    0U,	// FCLASS_W
    0U,	// FCLE_D
    0U,	// FCLE_W
    0U,	// FCLT_D
    0U,	// FCLT_W
    0U,	// FCMP_D32
    0U,	// FCMP_D32_MM
    0U,	// FCMP_D64
    0U,	// FCMP_S32
    0U,	// FCMP_S32_MM
    0U,	// FCNE_D
    0U,	// FCNE_W
    0U,	// FCOR_D
    0U,	// FCOR_W
    0U,	// FCUEQ_D
    0U,	// FCUEQ_W
    0U,	// FCULE_D
    0U,	// FCULE_W
    0U,	// FCULT_D
    0U,	// FCULT_W
    0U,	// FCUNE_D
    0U,	// FCUNE_W
    0U,	// FCUN_D
    0U,	// FCUN_W
    0U,	// FDIV_D
    0U,	// FDIV_D32
    0U,	// FDIV_D64
    0U,	// FDIV_MM
    0U,	// FDIV_S
    0U,	// FDIV_S_MM
    0U,	// FDIV_W
    0U,	// FEXDO_H
    0U,	// FEXDO_W
    0U,	// FEXP2_D
    0U,	// FEXP2_D_1_PSEUDO
    0U,	// FEXP2_W
    0U,	// FEXP2_W_1_PSEUDO
    0U,	// FEXUPL_D
    0U,	// FEXUPL_W
    0U,	// FEXUPR_D
    0U,	// FEXUPR_W
    0U,	// FFINT_S_D
    0U,	// FFINT_S_W
    0U,	// FFINT_U_D
    0U,	// FFINT_U_W
    0U,	// FFQL_D
    0U,	// FFQL_W
    0U,	// FFQR_D
    0U,	// FFQR_W
    0U,	// FILL_B
    0U,	// FILL_D
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    0U,	// FILL_H
    0U,	// FILL_W
    0U,	// FLOG2_D
    0U,	// FLOG2_W
    0U,	// FLOOR_L_D64
    0U,	// FLOOR_L_S
    0U,	// FLOOR_W_D32
    0U,	// FLOOR_W_D64
    0U,	// FLOOR_W_MM
    0U,	// FLOOR_W_S
    0U,	// FLOOR_W_S_MM
    0U,	// FMADD_D
    0U,	// FMADD_W
    0U,	// FMAX_A_D
    0U,	// FMAX_A_W
    0U,	// FMAX_D
    0U,	// FMAX_W
    0U,	// FMIN_A_D
    0U,	// FMIN_A_W
    0U,	// FMIN_D
    0U,	// FMIN_W
    0U,	// FMOV_D32
    0U,	// FMOV_D32_MM
    0U,	// FMOV_D64
    0U,	// FMOV_S
    0U,	// FMOV_S_MM
    0U,	// FMSUB_D
    0U,	// FMSUB_W
    0U,	// FMUL_D
    0U,	// FMUL_D32
    0U,	// FMUL_D64
    0U,	// FMUL_MM
    0U,	// FMUL_S
    0U,	// FMUL_S_MM
    0U,	// FMUL_W
    0U,	// FNEG_D32
    0U,	// FNEG_D64
    0U,	// FNEG_MM
    0U,	// FNEG_S
    0U,	// FNEG_S_MM
    0U,	// FRCP_D
    0U,	// FRCP_W
    0U,	// FRINT_D
    0U,	// FRINT_W
    0U,	// FRSQRT_D
    0U,	// FRSQRT_W
    0U,	// FSAF_D
    0U,	// FSAF_W
    0U,	// FSEQ_D
    0U,	// FSEQ_W
    0U,	// FSLE_D
    0U,	// FSLE_W
    0U,	// FSLT_D
    0U,	// FSLT_W
    0U,	// FSNE_D
    0U,	// FSNE_W
    0U,	// FSOR_D
    0U,	// FSOR_W
    0U,	// FSQRT_D
    0U,	// FSQRT_D32
    0U,	// FSQRT_D64
    0U,	// FSQRT_MM
    0U,	// FSQRT_S
    0U,	// FSQRT_S_MM
    0U,	// FSQRT_W
    0U,	// FSUB_D
    0U,	// FSUB_D32
    0U,	// FSUB_D64
    0U,	// FSUB_MM
    0U,	// FSUB_S
    0U,	// FSUB_S_MM
    0U,	// FSUB_W
    0U,	// FSUEQ_D
    0U,	// FSUEQ_W
    0U,	// FSULE_D
    0U,	// FSULE_W
    0U,	// FSULT_D
    0U,	// FSULT_W
    0U,	// FSUNE_D
    0U,	// FSUNE_W
    0U,	// FSUN_D
    0U,	// FSUN_W
    0U,	// FTINT_S_D
    0U,	// FTINT_S_W
    0U,	// FTINT_U_D
    0U,	// FTINT_U_W
    0U,	// FTQ_H
    0U,	// FTQ_W
    0U,	// FTRUNC_S_D
    0U,	// FTRUNC_S_W
    0U,	// FTRUNC_U_D
    0U,	// FTRUNC_U_W
    0U,	// GotPrologue16
    0U,	// HADD_S_D
    0U,	// HADD_S_H
    0U,	// HADD_S_W
    0U,	// HADD_U_D
    0U,	// HADD_U_H
    0U,	// HADD_U_W
    0U,	// HSUB_S_D
    0U,	// HSUB_S_H
    0U,	// HSUB_S_W
    0U,	// HSUB_U_D
    0U,	// HSUB_U_H
    0U,	// HSUB_U_W
    0U,	// ILVEV_B
    0U,	// ILVEV_D
    0U,	// ILVEV_H
    0U,	// ILVEV_W
    0U,	// ILVL_B
    0U,	// ILVL_D
    0U,	// ILVL_H
    0U,	// ILVL_W
    0U,	// ILVOD_B
    0U,	// ILVOD_D
    0U,	// ILVOD_H
    0U,	// ILVOD_W
    0U,	// ILVR_B
    0U,	// ILVR_D
    0U,	// ILVR_H
    0U,	// ILVR_W
    1U,	// INS
    0U,	// INSERT_B
    0U,	// INSERT_D
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    0U,	// INSERT_H
    0U,	// INSERT_W
    0U,	// INSV
    0U,	// INSVE_B
    0U,	// INSVE_D
    0U,	// INSVE_H
    0U,	// INSVE_W
    1U,	// INS_MM
    0U,	// J
    0U,	// JAL
    0U,	// JALR
    0U,	// JALR64
    0U,	// JALR64Pseudo
    0U,	// JALRPseudo
    0U,	// JALR_MM
    0U,	// JAL_MM
    0U,	// JR
    0U,	// JR64
    0U,	// JR_MM
    0U,	// J_MM
    0U,	// Jal16
    0U,	// JalB16
    0U,	// JrRa16
    0U,	// JrcRa16
    0U,	// JrcRx16
    0U,	// JumpLinkReg16
    0U,	// LB
    0U,	// LB64
    0U,	// LBUX
    0U,	// LB_MM
    0U,	// LBu
    0U,	// LBu64
    0U,	// LBu_MM
    0U,	// LD
    0U,	// LDC1
    0U,	// LDC164
    0U,	// LDC1_MM
    0U,	// LDC2
    0U,	// LDI_B
    0U,	// LDI_D
    0U,	// LDI_H
    0U,	// LDI_W
    0U,	// LDL
    0U,	// LDR
    0U,	// LDXC1
    0U,	// LDXC164
    0U,	// LD_B
    0U,	// LD_D
    0U,	// LD_H
    0U,	// LD_W
    0U,	// LEA_ADDiu
    0U,	// LEA_ADDiu64
    0U,	// LEA_ADDiu_MM
    0U,	// LH
    0U,	// LH64
    0U,	// LHX
    0U,	// LH_MM
    0U,	// LHu
    0U,	// LHu64
    0U,	// LHu_MM
    0U,	// LL
    0U,	// LLD
    0U,	// LL_MM
    0U,	// LOAD_ACC128
    0U,	// LOAD_ACC64
    0U,	// LOAD_ACC64DSP
    0U,	// LOAD_CCOND_DSP
    3U,	// LSA
    0U,	// LUXC1
    0U,	// LUXC164
    0U,	// LUXC1_MM
    0U,	// LUi
    0U,	// LUi64
    0U,	// LUi_MM
    0U,	// LW
    0U,	// LW64
    0U,	// LWC1
    0U,	// LWC1_MM
    0U,	// LWC2
    0U,	// LWL
    0U,	// LWL64
    0U,	// LWL_MM
    0U,	// LWR
    0U,	// LWR64
    0U,	// LWR_MM
    0U,	// LWU_MM
    0U,	// LWX
    0U,	// LWXC1
    0U,	// LWXC1_MM
    0U,	// LW_MM
    0U,	// LWu
    0U,	// LbRxRyOffMemX16
    0U,	// LbuRxRyOffMemX16
    0U,	// LhRxRyOffMemX16
    0U,	// LhuRxRyOffMemX16
    0U,	// LiRxImm16
    0U,	// LiRxImmAlignX16
    0U,	// LiRxImmX16
    0U,	// LoadAddr32Imm
    0U,	// LoadAddr32Reg
    0U,	// LoadImm32Reg
    0U,	// LwConstant32
    0U,	// LwRxPcTcp16
    0U,	// LwRxPcTcpX16
    0U,	// LwRxRyOffMemX16
    0U,	// LwRxSpImmX16
    0U,	// MADD
    0U,	// MADDR_Q_H
    0U,	// MADDR_Q_W
    0U,	// MADDU
    0U,	// MADDU_DSP
    0U,	// MADDU_MM
    0U,	// MADDV_B
    0U,	// MADDV_D
    0U,	// MADDV_H
    0U,	// MADDV_W
    1U,	// MADD_D32
    1U,	// MADD_D32_MM
    1U,	// MADD_D64
    0U,	// MADD_DSP
    0U,	// MADD_MM
    0U,	// MADD_Q_H
    0U,	// MADD_Q_W
    1U,	// MADD_S
    1U,	// MADD_S_MM
    0U,	// MAQ_SA_W_PHL
    0U,	// MAQ_SA_W_PHR
    0U,	// MAQ_S_W_PHL
    0U,	// MAQ_S_W_PHR
    0U,	// MAXI_S_B
    0U,	// MAXI_S_D
    0U,	// MAXI_S_H
    0U,	// MAXI_S_W
    0U,	// MAXI_U_B
    0U,	// MAXI_U_D
    0U,	// MAXI_U_H
    0U,	// MAXI_U_W
    0U,	// MAX_A_B
    0U,	// MAX_A_D
    0U,	// MAX_A_H
    0U,	// MAX_A_W
    0U,	// MAX_S_B
    0U,	// MAX_S_D
    0U,	// MAX_S_H
    0U,	// MAX_S_W
    0U,	// MAX_U_B
    0U,	// MAX_U_D
    0U,	// MAX_U_H
    0U,	// MAX_U_W
    0U,	// MFC0
    0U,	// MFC1
    0U,	// MFC1_MM
    0U,	// MFC2
    0U,	// MFHC1
    0U,	// MFHC1_MM
    0U,	// MFHI
    0U,	// MFHI64
    0U,	// MFHI_DSP
    0U,	// MFHI_MM
    0U,	// MFLO
    0U,	// MFLO64
    0U,	// MFLO_DSP
    0U,	// MFLO_MM
    0U,	// MINI_S_B
    0U,	// MINI_S_D
    0U,	// MINI_S_H
    0U,	// MINI_S_W
    0U,	// MINI_U_B
    0U,	// MINI_U_D
    0U,	// MINI_U_H
    0U,	// MINI_U_W
    0U,	// MIN_A_B
    0U,	// MIN_A_D
    0U,	// MIN_A_H
    0U,	// MIN_A_W
    0U,	// MIN_S_B
    0U,	// MIN_S_D
    0U,	// MIN_S_H
    0U,	// MIN_S_W
    0U,	// MIN_U_B
    0U,	// MIN_U_D
    0U,	// MIN_U_H
    0U,	// MIN_U_W
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    0U,	// MODSUB
    0U,	// MOD_S_B
    0U,	// MOD_S_D
    0U,	// MOD_S_H
    0U,	// MOD_S_W
    0U,	// MOD_U_B
    0U,	// MOD_U_D
    0U,	// MOD_U_H
    0U,	// MOD_U_W
    0U,	// MOVE_V
    0U,	// MOVF_D32
    0U,	// MOVF_D32_MM
    0U,	// MOVF_D64
    0U,	// MOVF_I
    0U,	// MOVF_I64
    0U,	// MOVF_I_MM
    0U,	// MOVF_S
    0U,	// MOVF_S_MM
    0U,	// MOVN_I64_D64
    0U,	// MOVN_I64_I
    0U,	// MOVN_I64_I64
    0U,	// MOVN_I64_S
    0U,	// MOVN_I_D32
    0U,	// MOVN_I_D32_MM
    0U,	// MOVN_I_D64
    0U,	// MOVN_I_I
    0U,	// MOVN_I_I64
    0U,	// MOVN_I_MM
    0U,	// MOVN_I_S
    0U,	// MOVN_I_S_MM
    0U,	// MOVT_D32
    0U,	// MOVT_D32_MM
    0U,	// MOVT_D64
    0U,	// MOVT_I
    0U,	// MOVT_I64
    0U,	// MOVT_I_MM
    0U,	// MOVT_S
    0U,	// MOVT_S_MM
    0U,	// MOVZ_I64_D64
    0U,	// MOVZ_I64_I
    0U,	// MOVZ_I64_I64
    0U,	// MOVZ_I64_S
    0U,	// MOVZ_I_D32
    0U,	// MOVZ_I_D32_MM
    0U,	// MOVZ_I_D64
    0U,	// MOVZ_I_I
    0U,	// MOVZ_I_I64
    0U,	// MOVZ_I_MM
    0U,	// MOVZ_I_S
    0U,	// MOVZ_I_S_MM
    0U,	// MSUB
    0U,	// MSUBR_Q_H
    0U,	// MSUBR_Q_W
    0U,	// MSUBU
    0U,	// MSUBU_DSP
    0U,	// MSUBU_MM
    0U,	// MSUBV_B
    0U,	// MSUBV_D
    0U,	// MSUBV_H
    0U,	// MSUBV_W
    1U,	// MSUB_D32
    1U,	// MSUB_D32_MM
    1U,	// MSUB_D64
    0U,	// MSUB_DSP
    0U,	// MSUB_MM
    0U,	// MSUB_Q_H
    0U,	// MSUB_Q_W
    1U,	// MSUB_S
    1U,	// MSUB_S_MM
    0U,	// MTC0
    0U,	// MTC1
    0U,	// MTC1_MM
    0U,	// MTC2
    0U,	// MTHC1
    0U,	// MTHC1_MM
    0U,	// MTHI
    0U,	// MTHI64
    0U,	// MTHI_DSP
    0U,	// MTHI_MM
    0U,	// MTHLIP
    0U,	// MTLO
    0U,	// MTLO64
    0U,	// MTLO_DSP
    0U,	// MTLO_MM
    0U,	// MUL
    0U,	// MULEQ_S_W_PHL
    0U,	// MULEQ_S_W_PHR
    0U,	// MULEU_S_PH_QBL
    0U,	// MULEU_S_PH_QBR
    0U,	// MULQ_RS_PH
    0U,	// MULQ_RS_W
    0U,	// MULQ_S_PH
    0U,	// MULQ_S_W
    0U,	// MULR_Q_H
    0U,	// MULR_Q_W
    0U,	// MULSAQ_S_W_PH
    0U,	// MULSA_W_PH
    0U,	// MULT
    0U,	// MULTU_DSP
    0U,	// MULT_DSP
    0U,	// MULT_MM
    0U,	// MULTu
    0U,	// MULTu_MM
    0U,	// MULV_B
    0U,	// MULV_D
    0U,	// MULV_H
    0U,	// MULV_W
    0U,	// MUL_MM
    0U,	// MUL_PH
    0U,	// MUL_Q_H
    0U,	// MUL_Q_W
    0U,	// MUL_S_PH
    0U,	// Mfhi16
    0U,	// Mflo16
    0U,	// Move32R16
    0U,	// MoveR3216
    0U,	// MultRxRy16
    0U,	// MultRxRyRz16
    0U,	// MultuRxRy16
    0U,	// MultuRxRyRz16
    0U,	// NLOC_B
    0U,	// NLOC_D
    0U,	// NLOC_H
    0U,	// NLOC_W
    0U,	// NLZC_B
    0U,	// NLZC_D
    0U,	// NLZC_H
    0U,	// NLZC_W
    1U,	// NMADD_D32
    1U,	// NMADD_D32_MM
    1U,	// NMADD_D64
    1U,	// NMADD_S
    1U,	// NMADD_S_MM
    1U,	// NMSUB_D32
    1U,	// NMSUB_D32_MM
    1U,	// NMSUB_D64
    1U,	// NMSUB_S
    1U,	// NMSUB_S_MM
    0U,	// NOP
    0U,	// NOR
    0U,	// NOR64
    0U,	// NORI_B
    0U,	// NOR_MM
    0U,	// NOR_V
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    0U,	// NegRxRy16
    0U,	// NotRxRy16
    0U,	// OR
    0U,	// OR64
    0U,	// ORI_B
    0U,	// OR_MM
    0U,	// OR_V
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    0U,	// ORi
    0U,	// ORi64
    0U,	// ORi_MM
    0U,	// OrRxRxRy16
    0U,	// PACKRL_PH
    0U,	// PCKEV_B
    0U,	// PCKEV_D
    0U,	// PCKEV_H
    0U,	// PCKEV_W
    0U,	// PCKOD_B
    0U,	// PCKOD_D
    0U,	// PCKOD_H
    0U,	// PCKOD_W
    0U,	// PCNT_B
    0U,	// PCNT_D
    0U,	// PCNT_H
    0U,	// PCNT_W
    0U,	// PICK_PH
    0U,	// PICK_QB
    0U,	// PRECEQU_PH_QBL
    0U,	// PRECEQU_PH_QBLA
    0U,	// PRECEQU_PH_QBR
    0U,	// PRECEQU_PH_QBRA
    0U,	// PRECEQ_W_PHL
    0U,	// PRECEQ_W_PHR
    0U,	// PRECEU_PH_QBL
    0U,	// PRECEU_PH_QBLA
    0U,	// PRECEU_PH_QBR
    0U,	// PRECEU_PH_QBRA
    0U,	// PRECRQU_S_QB_PH
    0U,	// PRECRQ_PH_W
    0U,	// PRECRQ_QB_PH
    0U,	// PRECRQ_RS_PH_W
    0U,	// PRECR_QB_PH
    0U,	// PRECR_SRA_PH_W
    0U,	// PRECR_SRA_R_PH_W
    0U,	// PREPEND
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    0U,	// PseudoCVT_D32_W
    0U,	// PseudoCVT_D64_L
    0U,	// PseudoCVT_D64_W
    0U,	// PseudoCVT_S_L
    0U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMULT
    0U,	// PseudoMULTu
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoSDIV
    0U,	// PseudoUDIV
    0U,	// RADDU_W_QB
    0U,	// RDDSP
    0U,	// RDHWR
    0U,	// RDHWR64
    0U,	// REPLV_PH
    0U,	// REPLV_QB
    0U,	// REPL_PH
    0U,	// REPL_QB
    0U,	// RET
    0U,	// RET_MM
    0U,	// ROTR
    0U,	// ROTRV
    0U,	// ROTRV_MM
    0U,	// ROTR_MM
    0U,	// ROUND_L_D64
    0U,	// ROUND_L_S
    0U,	// ROUND_W_D32
    0U,	// ROUND_W_D64
    0U,	// ROUND_W_MM
    0U,	// ROUND_W_S
    0U,	// ROUND_W_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    0U,	// RetRA
    0U,	// RetRA16
    0U,	// SAT_S_B
    0U,	// SAT_S_D
    0U,	// SAT_S_H
    0U,	// SAT_S_W
    0U,	// SAT_U_B
    0U,	// SAT_U_D
    0U,	// SAT_U_H
    0U,	// SAT_U_W
    0U,	// SB
    0U,	// SB64
    0U,	// SB_MM
    0U,	// SC
    0U,	// SCD
    0U,	// SC_MM
    0U,	// SD
    0U,	// SDC1
    0U,	// SDC164
    0U,	// SDC1_MM
    0U,	// SDC2
    0U,	// SDIV
    0U,	// SDIV_MM
    0U,	// SDL
    0U,	// SDR
    0U,	// SDXC1
    0U,	// SDXC164
    0U,	// SEB
    0U,	// SEB64
    0U,	// SEB_MM
    0U,	// SEH
    0U,	// SEH64
    0U,	// SEH_MM
    0U,	// SH
    0U,	// SH64
    0U,	// SHF_B
    0U,	// SHF_H
    0U,	// SHF_W
    0U,	// SHILO
    0U,	// SHILOV
    0U,	// SHLLV_PH
    0U,	// SHLLV_QB
    0U,	// SHLLV_S_PH
    0U,	// SHLLV_S_W
    0U,	// SHLL_PH
    0U,	// SHLL_QB
    0U,	// SHLL_S_PH
    0U,	// SHLL_S_W
    0U,	// SHRAV_PH
    0U,	// SHRAV_QB
    0U,	// SHRAV_R_PH
    0U,	// SHRAV_R_QB
    0U,	// SHRAV_R_W
    0U,	// SHRA_PH
    0U,	// SHRA_QB
    0U,	// SHRA_R_PH
    0U,	// SHRA_R_QB
    0U,	// SHRA_R_W
    0U,	// SHRLV_PH
    0U,	// SHRLV_QB
    0U,	// SHRL_PH
    0U,	// SHRL_QB
    0U,	// SH_MM
    0U,	// SLDI_B
    0U,	// SLDI_D
    0U,	// SLDI_H
    0U,	// SLDI_W
    0U,	// SLD_B
    0U,	// SLD_D
    0U,	// SLD_H
    0U,	// SLD_W
    0U,	// SLL
    0U,	// SLL64_32
    0U,	// SLL64_64
    0U,	// SLLI_B
    0U,	// SLLI_D
    0U,	// SLLI_H
    0U,	// SLLI_W
    0U,	// SLLV
    0U,	// SLLV_MM
    0U,	// SLL_B
    0U,	// SLL_D
    0U,	// SLL_H
    0U,	// SLL_MM
    0U,	// SLL_W
    0U,	// SLT
    0U,	// SLT64
    0U,	// SLT_MM
    0U,	// SLTi
    0U,	// SLTi64
    0U,	// SLTi_MM
    0U,	// SLTiu
    0U,	// SLTiu64
    0U,	// SLTiu_MM
    0U,	// SLTu
    0U,	// SLTu64
    0U,	// SLTu_MM
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    0U,	// SPLATI_B
    0U,	// SPLATI_D
    0U,	// SPLATI_H
    0U,	// SPLATI_W
    0U,	// SPLAT_B
    0U,	// SPLAT_D
    0U,	// SPLAT_H
    0U,	// SPLAT_W
    0U,	// SRA
    0U,	// SRAI_B
    0U,	// SRAI_D
    0U,	// SRAI_H
    0U,	// SRAI_W
    0U,	// SRARI_B
    0U,	// SRARI_D
    0U,	// SRARI_H
    0U,	// SRARI_W
    0U,	// SRAR_B
    0U,	// SRAR_D
    0U,	// SRAR_H
    0U,	// SRAR_W
    0U,	// SRAV
    0U,	// SRAV_MM
    0U,	// SRA_B
    0U,	// SRA_D
    0U,	// SRA_H
    0U,	// SRA_MM
    0U,	// SRA_W
    0U,	// SRL
    0U,	// SRLI_B
    0U,	// SRLI_D
    0U,	// SRLI_H
    0U,	// SRLI_W
    0U,	// SRLRI_B
    0U,	// SRLRI_D
    0U,	// SRLRI_H
    0U,	// SRLRI_W
    0U,	// SRLR_B
    0U,	// SRLR_D
    0U,	// SRLR_H
    0U,	// SRLR_W
    0U,	// SRLV
    0U,	// SRLV_MM
    0U,	// SRL_B
    0U,	// SRL_D
    0U,	// SRL_H
    0U,	// SRL_MM
    0U,	// SRL_W
    0U,	// STORE_ACC128
    0U,	// STORE_ACC64
    0U,	// STORE_ACC64DSP
    0U,	// STORE_CCOND_DSP
    0U,	// ST_B
    0U,	// ST_D
    0U,	// ST_H
    0U,	// ST_W
    0U,	// SUB
    0U,	// SUBQH_PH
    0U,	// SUBQH_R_PH
    0U,	// SUBQH_R_W
    0U,	// SUBQH_W
    0U,	// SUBQ_PH
    0U,	// SUBQ_S_PH
    0U,	// SUBQ_S_W
    0U,	// SUBSUS_U_B
    0U,	// SUBSUS_U_D
    0U,	// SUBSUS_U_H
    0U,	// SUBSUS_U_W
    0U,	// SUBSUU_S_B
    0U,	// SUBSUU_S_D
    0U,	// SUBSUU_S_H
    0U,	// SUBSUU_S_W
    0U,	// SUBS_S_B
    0U,	// SUBS_S_D
    0U,	// SUBS_S_H
    0U,	// SUBS_S_W
    0U,	// SUBS_U_B
    0U,	// SUBS_U_D
    0U,	// SUBS_U_H
    0U,	// SUBS_U_W
    0U,	// SUBUH_QB
    0U,	// SUBUH_R_QB
    0U,	// SUBU_PH
    0U,	// SUBU_QB
    0U,	// SUBU_S_PH
    0U,	// SUBU_S_QB
    0U,	// SUBVI_B
    0U,	// SUBVI_D
    0U,	// SUBVI_H
    0U,	// SUBVI_W
    0U,	// SUBV_B
    0U,	// SUBV_D
    0U,	// SUBV_H
    0U,	// SUBV_W
    0U,	// SUB_MM
    0U,	// SUBu
    0U,	// SUBu_MM
    0U,	// SUXC1
    0U,	// SUXC164
    0U,	// SUXC1_MM
    0U,	// SW
    0U,	// SW64
    0U,	// SWC1
    0U,	// SWC1_MM
    0U,	// SWC2
    0U,	// SWL
    0U,	// SWL64
    0U,	// SWL_MM
    0U,	// SWR
    0U,	// SWR64
    0U,	// SWR_MM
    0U,	// SWXC1
    0U,	// SWXC1_MM
    0U,	// SW_MM
    0U,	// SYNC
    0U,	// SYNC_MM
    0U,	// SYSCALL
    0U,	// SYSCALL_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    0U,	// Save16
    0U,	// SaveX16
    0U,	// SbRxRyOffMemX16
    0U,	// SebRx16
    0U,	// SehRx16
    0U,	// SelBeqZ
    0U,	// SelBneZ
    0U,	// SelTBteqZCmp
    0U,	// SelTBteqZCmpi
    0U,	// SelTBteqZSlt
    0U,	// SelTBteqZSlti
    0U,	// SelTBteqZSltiu
    0U,	// SelTBteqZSltu
    0U,	// SelTBtneZCmp
    0U,	// SelTBtneZCmpi
    0U,	// SelTBtneZSlt
    0U,	// SelTBtneZSlti
    0U,	// SelTBtneZSltiu
    0U,	// SelTBtneZSltu
    0U,	// ShRxRyOffMemX16
    0U,	// SllX16
    0U,	// SllvRxRy16
    0U,	// SltCCRxRy16
    0U,	// SltRxRy16
    0U,	// SltiCCRxImmX16
    0U,	// SltiRxImm16
    0U,	// SltiRxImmX16
    0U,	// SltiuCCRxImmX16
    0U,	// SltiuRxImm16
    0U,	// SltiuRxImmX16
    0U,	// SltuCCRxRy16
    0U,	// SltuRxRy16
    0U,	// SltuRxRyRz16
    0U,	// SraX16
    0U,	// SravRxRy16
    0U,	// SrlX16
    0U,	// SrlvRxRy16
    0U,	// SubuRxRyRz16
    0U,	// SwRxRyOffMemX16
    0U,	// SwRxSpImmX16
    0U,	// TAILCALL
    0U,	// TAILCALL64_R
    0U,	// TAILCALL_R
    0U,	// TEQ
    0U,	// TEQI
    0U,	// TEQI_MM
    0U,	// TEQ_MM
    0U,	// TGE
    0U,	// TGEI
    0U,	// TGEIU
    0U,	// TGEIU_MM
    0U,	// TGEI_MM
    0U,	// TGEU
    0U,	// TGEU_MM
    0U,	// TGE_MM
    0U,	// TLT
    0U,	// TLTI
    0U,	// TLTIU_MM
    0U,	// TLTI_MM
    0U,	// TLTU
    0U,	// TLTU_MM
    0U,	// TLT_MM
    0U,	// TNE
    0U,	// TNEI
    0U,	// TNEI_MM
    0U,	// TNE_MM
    0U,	// TRAP
    0U,	// TRUNC_L_D64
    0U,	// TRUNC_L_S
    0U,	// TRUNC_W_D32
    0U,	// TRUNC_W_D64
    0U,	// TRUNC_W_MM
    0U,	// TRUNC_W_S
    0U,	// TRUNC_W_S_MM
    0U,	// TTLTIU
    0U,	// UDIV
    0U,	// UDIV_MM
    0U,	// VSHF_B
    0U,	// VSHF_D
    0U,	// VSHF_H
    0U,	// VSHF_W
    0U,	// WAIT
    0U,	// WAIT_MM
    0U,	// WRDSP
    0U,	// WSBH
    0U,	// WSBH_MM
    0U,	// XOR
    0U,	// XOR64
    0U,	// XORI_B
    0U,	// XOR_MM
    0U,	// XOR_V
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    0U,	// XORi
    0U,	// XORi64
    0U,	// XORi_MM
    0U,	// XorRxRxRy16
    0U
  };

#ifndef CAPSTONE_DIET
  static char AsmStrs[] = {
  /* 0 */ 'j', 'a', 'l', 'r', 'c', 32, 9, 0,
  /* 8 */ 'd', 'm', 'f', 'c', '0', 9, 0,
  /* 15 */ 'd', 'm', 't', 'c', '0', 9, 0,
  /* 22 */ 'l', 'd', 'c', '1', 9, 0,
  /* 28 */ 's', 'd', 'c', '1', 9, 0,
  /* 34 */ 'c', 'f', 'c', '1', 9, 0,
  /* 40 */ 'd', 'm', 'f', 'c', '1', 9, 0,
  /* 47 */ 'm', 'f', 'h', 'c', '1', 9, 0,
  /* 54 */ 'm', 't', 'h', 'c', '1', 9, 0,
  /* 61 */ 'c', 't', 'c', '1', 9, 0,
  /* 67 */ 'd', 'm', 't', 'c', '1', 9, 0,
  /* 74 */ 'l', 'w', 'c', '1', 9, 0,
  /* 80 */ 's', 'w', 'c', '1', 9, 0,
  /* 86 */ 'l', 'd', 'x', 'c', '1', 9, 0,
  /* 93 */ 's', 'd', 'x', 'c', '1', 9, 0,
  /* 100 */ 'l', 'u', 'x', 'c', '1', 9, 0,
  /* 107 */ 's', 'u', 'x', 'c', '1', 9, 0,
  /* 114 */ 'l', 'w', 'x', 'c', '1', 9, 0,
  /* 121 */ 's', 'w', 'x', 'c', '1', 9, 0,
  /* 128 */ 'd', 's', 'r', 'a', '3', '2', 9, 0,
  /* 136 */ 'b', 'p', 'o', 's', 'g', 'e', '3', '2', 9, 0,
  /* 146 */ 'd', 's', 'l', 'l', '3', '2', 9, 0,
  /* 154 */ 'd', 's', 'r', 'l', '3', '2', 9, 0,
  /* 162 */ 'd', 'r', 'o', 't', 'r', '3', '2', 9, 0,
  /* 171 */ 'l', 'd', 'c', '2', 9, 0,
  /* 177 */ 's', 'd', 'c', '2', 9, 0,
  /* 183 */ 'd', 'm', 'f', 'c', '2', 9, 0,
  /* 190 */ 'd', 'm', 't', 'c', '2', 9, 0,
  /* 197 */ 'l', 'w', 'c', '2', 9, 0,
  /* 203 */ 's', 'w', 'c', '2', 9, 0,
  /* 209 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 225 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 242 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 258 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 275 */ 'd', 's', 'r', 'a', 9, 0,
  /* 281 */ 'd', 'l', 's', 'a', 9, 0,
  /* 287 */ 'c', 'f', 'c', 'm', 's', 'a', 9, 0,
  /* 295 */ 'c', 't', 'c', 'm', 's', 'a', 9, 0,
  /* 303 */ 'a', 'd', 'd', '_', 'a', '.', 'b', 9, 0,
  /* 312 */ 'm', 'i', 'n', '_', 'a', '.', 'b', 9, 0,
  /* 321 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'b', 9, 0,
  /* 331 */ 'm', 'a', 'x', '_', 'a', '.', 'b', 9, 0,
  /* 340 */ 's', 'r', 'a', '.', 'b', 9, 0,
  /* 347 */ 'n', 'l', 'o', 'c', '.', 'b', 9, 0,
  /* 355 */ 'n', 'l', 'z', 'c', '.', 'b', 9, 0,
  /* 363 */ 's', 'l', 'd', '.', 'b', 9, 0,
  /* 370 */ 'p', 'c', 'k', 'o', 'd', '.', 'b', 9, 0,
  /* 379 */ 'i', 'l', 'v', 'o', 'd', '.', 'b', 9, 0,
  /* 388 */ 'i', 'n', 's', 'v', 'e', '.', 'b', 9, 0,
  /* 397 */ 'v', 's', 'h', 'f', '.', 'b', 9, 0,
  /* 405 */ 'b', 'n', 'e', 'g', '.', 'b', 9, 0,
  /* 413 */ 's', 'r', 'a', 'i', '.', 'b', 9, 0,
  /* 421 */ 's', 'l', 'd', 'i', '.', 'b', 9, 0,
  /* 429 */ 'a', 'n', 'd', 'i', '.', 'b', 9, 0,
  /* 437 */ 'b', 'n', 'e', 'g', 'i', '.', 'b', 9, 0,
  /* 446 */ 'b', 's', 'e', 'l', 'i', '.', 'b', 9, 0,
  /* 455 */ 's', 'l', 'l', 'i', '.', 'b', 9, 0,
  /* 463 */ 's', 'r', 'l', 'i', '.', 'b', 9, 0,
  /* 471 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'b', 9, 0,
  /* 481 */ 'c', 'e', 'q', 'i', '.', 'b', 9, 0,
  /* 489 */ 's', 'r', 'a', 'r', 'i', '.', 'b', 9, 0,
  /* 498 */ 'b', 'c', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 507 */ 's', 'r', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 516 */ 'n', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 524 */ 'x', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 532 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'b', 9, 0,
  /* 542 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'b', 9, 0,
  /* 552 */ 'b', 's', 'e', 't', 'i', '.', 'b', 9, 0,
  /* 561 */ 's', 'u', 'b', 'v', 'i', '.', 'b', 9, 0,
  /* 570 */ 'a', 'd', 'd', 'v', 'i', '.', 'b', 9, 0,
  /* 579 */ 'b', 'm', 'z', 'i', '.', 'b', 9, 0,
  /* 587 */ 'b', 'm', 'n', 'z', 'i', '.', 'b', 9, 0,
  /* 596 */ 'f', 'i', 'l', 'l', '.', 'b', 9, 0,
  /* 604 */ 's', 'l', 'l', '.', 'b', 9, 0,
  /* 611 */ 's', 'r', 'l', '.', 'b', 9, 0,
  /* 618 */ 'b', 'i', 'n', 's', 'l', '.', 'b', 9, 0,
  /* 627 */ 'i', 'l', 'v', 'l', '.', 'b', 9, 0,
  /* 635 */ 'c', 'e', 'q', '.', 'b', 9, 0,
  /* 642 */ 's', 'r', 'a', 'r', '.', 'b', 9, 0,
  /* 650 */ 'b', 'c', 'l', 'r', '.', 'b', 9, 0,
  /* 658 */ 's', 'r', 'l', 'r', '.', 'b', 9, 0,
  /* 666 */ 'b', 'i', 'n', 's', 'r', '.', 'b', 9, 0,
  /* 675 */ 'i', 'l', 'v', 'r', '.', 'b', 9, 0,
  /* 683 */ 'a', 's', 'u', 'b', '_', 's', '.', 'b', 9, 0,
  /* 693 */ 'm', 'o', 'd', '_', 's', '.', 'b', 9, 0,
  /* 702 */ 'c', 'l', 'e', '_', 's', '.', 'b', 9, 0,
  /* 711 */ 'a', 'v', 'e', '_', 's', '.', 'b', 9, 0,
  /* 720 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'b', 9, 0,
  /* 730 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'b', 9, 0,
  /* 740 */ 'c', 'l', 't', 'i', '_', 's', '.', 'b', 9, 0,
  /* 750 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'b', 9, 0,
  /* 760 */ 'm', 'i', 'n', '_', 's', '.', 'b', 9, 0,
  /* 769 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'b', 9, 0,
  /* 779 */ 's', 'u', 'b', 's', '_', 's', '.', 'b', 9, 0,
  /* 789 */ 'a', 'd', 'd', 's', '_', 's', '.', 'b', 9, 0,
  /* 799 */ 's', 'a', 't', '_', 's', '.', 'b', 9, 0,
  /* 808 */ 'c', 'l', 't', '_', 's', '.', 'b', 9, 0,
  /* 817 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'b', 9, 0,
  /* 829 */ 'd', 'i', 'v', '_', 's', '.', 'b', 9, 0,
  /* 838 */ 'm', 'a', 'x', '_', 's', '.', 'b', 9, 0,
  /* 847 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'b', 9, 0,
  /* 857 */ 's', 'p', 'l', 'a', 't', '.', 'b', 9, 0,
  /* 866 */ 'b', 's', 'e', 't', '.', 'b', 9, 0,
  /* 874 */ 'p', 'c', 'n', 't', '.', 'b', 9, 0,
  /* 882 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'b', 9, 0,
  /* 892 */ 's', 't', '.', 'b', 9, 0,
  /* 898 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'b', 9, 0,
  /* 908 */ 'm', 'o', 'd', '_', 'u', '.', 'b', 9, 0,
  /* 917 */ 'c', 'l', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 926 */ 'a', 'v', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 935 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 945 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 955 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 965 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 975 */ 'm', 'i', 'n', '_', 'u', '.', 'b', 9, 0,
  /* 984 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'b', 9, 0,
  /* 994 */ 's', 'u', 'b', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1004 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1014 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1026 */ 's', 'a', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1035 */ 'c', 'l', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1044 */ 'd', 'i', 'v', '_', 'u', '.', 'b', 9, 0,
  /* 1053 */ 'm', 'a', 'x', '_', 'u', '.', 'b', 9, 0,
  /* 1062 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'b', 9, 0,
  /* 1072 */ 'm', 's', 'u', 'b', 'v', '.', 'b', 9, 0,
  /* 1081 */ 'm', 'a', 'd', 'd', 'v', '.', 'b', 9, 0,
  /* 1090 */ 'p', 'c', 'k', 'e', 'v', '.', 'b', 9, 0,
  /* 1099 */ 'i', 'l', 'v', 'e', 'v', '.', 'b', 9, 0,
  /* 1108 */ 'm', 'u', 'l', 'v', '.', 'b', 9, 0,
  /* 1116 */ 'b', 'z', '.', 'b', 9, 0,
  /* 1122 */ 'b', 'n', 'z', '.', 'b', 9, 0,
  /* 1129 */ 's', 'e', 'b', 9, 0,
  /* 1134 */ 'l', 'b', 9, 0,
  /* 1138 */ 's', 'h', 'r', 'a', '.', 'q', 'b', 9, 0,
  /* 1147 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1161 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1174 */ 'c', 'm', 'p', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1186 */ 's', 'u', 'b', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1196 */ 'a', 'd', 'd', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1206 */ 'p', 'i', 'c', 'k', '.', 'q', 'b', 9, 0,
  /* 1215 */ 's', 'h', 'l', 'l', '.', 'q', 'b', 9, 0,
  /* 1224 */ 'r', 'e', 'p', 'l', '.', 'q', 'b', 9, 0,
  /* 1233 */ 's', 'h', 'r', 'l', '.', 'q', 'b', 9, 0,
  /* 1242 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1256 */ 'c', 'm', 'p', 'g', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1269 */ 'c', 'm', 'p', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1281 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1292 */ 's', 'u', 'b', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1304 */ 'a', 'd', 'd', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1316 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1328 */ 'a', 'b', 's', 'q', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1339 */ 's', 'u', 'b', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1350 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1361 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1375 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1388 */ 'c', 'm', 'p', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1400 */ 's', 'u', 'b', 'u', '.', 'q', 'b', 9, 0,
  /* 1409 */ 'a', 'd', 'd', 'u', '.', 'q', 'b', 9, 0,
  /* 1418 */ 's', 'h', 'r', 'a', 'v', '.', 'q', 'b', 9, 0,
  /* 1428 */ 's', 'h', 'l', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1438 */ 'r', 'e', 'p', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1448 */ 's', 'h', 'r', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1458 */ 'r', 'a', 'd', 'd', 'u', '.', 'w', '.', 'q', 'b', 9, 0,
  /* 1470 */ 's', 'b', 9, 0,
  /* 1474 */ 'm', 'o', 'd', 's', 'u', 'b', 9, 0,
  /* 1482 */ 'm', 's', 'u', 'b', 9, 0,
  /* 1488 */ 'a', 'd', 'd', 's', 'c', 9, 0,
  /* 1495 */ 'a', 'd', 'd', 'w', 'c', 9, 0,
  /* 1502 */ 'f', 'l', 'o', 'g', '2', '.', 'd', 9, 0,
  /* 1511 */ 'f', 'e', 'x', 'p', '2', '.', 'd', 9, 0,
  /* 1520 */ 'a', 'd', 'd', '_', 'a', '.', 'd', 9, 0,
  /* 1529 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'd', 9, 0,
  /* 1539 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'd', 9, 0,
  /* 1549 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'd', 9, 0,
  /* 1559 */ 's', 'r', 'a', '.', 'd', 9, 0,
  /* 1566 */ 'f', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1574 */ 'f', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1583 */ 'n', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1592 */ 'n', 'l', 'o', 'c', '.', 'd', 9, 0,
  /* 1600 */ 'n', 'l', 'z', 'c', '.', 'd', 9, 0,
  /* 1608 */ 'f', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1616 */ 'f', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1625 */ 'n', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1634 */ 's', 'l', 'd', '.', 'd', 9, 0,
  /* 1641 */ 'p', 'c', 'k', 'o', 'd', '.', 'd', 9, 0,
  /* 1650 */ 'i', 'l', 'v', 'o', 'd', '.', 'd', 9, 0,
  /* 1659 */ 'c', '.', 'n', 'g', 'e', '.', 'd', 9, 0,
  /* 1668 */ 'c', '.', 'l', 'e', '.', 'd', 9, 0,
  /* 1676 */ 'f', 'c', 'l', 'e', '.', 'd', 9, 0,
  /* 1684 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 'd', 9, 0,
  /* 1694 */ 'c', '.', 'o', 'l', 'e', '.', 'd', 9, 0,
  /* 1703 */ 'f', 's', 'l', 'e', '.', 'd', 9, 0,
  /* 1711 */ 'c', '.', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1720 */ 'f', 'c', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1729 */ 'f', 's', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1738 */ 'f', 'c', 'n', 'e', '.', 'd', 9, 0,
  /* 1746 */ 'f', 's', 'n', 'e', '.', 'd', 9, 0,
  /* 1754 */ 'f', 'c', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 1763 */ 'f', 's', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 1772 */ 'i', 'n', 's', 'v', 'e', '.', 'd', 9, 0,
  /* 1781 */ 'c', '.', 'f', '.', 'd', 9, 0,
  /* 1788 */ 'f', 'c', 'a', 'f', '.', 'd', 9, 0,
  /* 1796 */ 'f', 's', 'a', 'f', '.', 'd', 9, 0,
  /* 1804 */ 'v', 's', 'h', 'f', '.', 'd', 9, 0,
  /* 1812 */ 'c', '.', 's', 'f', '.', 'd', 9, 0,
  /* 1820 */ 'm', 'o', 'v', 'f', '.', 'd', 9, 0,
  /* 1828 */ 'b', 'n', 'e', 'g', '.', 'd', 9, 0,
  /* 1836 */ 's', 'r', 'a', 'i', '.', 'd', 9, 0,
  /* 1844 */ 's', 'l', 'd', 'i', '.', 'd', 9, 0,
  /* 1852 */ 'b', 'n', 'e', 'g', 'i', '.', 'd', 9, 0,
  /* 1861 */ 's', 'l', 'l', 'i', '.', 'd', 9, 0,
  /* 1869 */ 's', 'r', 'l', 'i', '.', 'd', 9, 0,
  /* 1877 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'd', 9, 0,
  /* 1887 */ 'c', 'e', 'q', 'i', '.', 'd', 9, 0,
  /* 1895 */ 's', 'r', 'a', 'r', 'i', '.', 'd', 9, 0,
  /* 1904 */ 'b', 'c', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 1913 */ 's', 'r', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 1922 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'd', 9, 0,
  /* 1932 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'd', 9, 0,
  /* 1942 */ 'b', 's', 'e', 't', 'i', '.', 'd', 9, 0,
  /* 1951 */ 's', 'u', 'b', 'v', 'i', '.', 'd', 9, 0,
  /* 1960 */ 'a', 'd', 'd', 'v', 'i', '.', 'd', 9, 0,
  /* 1969 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 'd', 9, 0,
  /* 1980 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 'd', 9, 0,
  /* 1991 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 'd', 9, 0,
  /* 2001 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 'd', 9, 0,
  /* 2012 */ 'c', 'v', 't', '.', 'l', '.', 'd', 9, 0,
  /* 2021 */ 'c', '.', 'n', 'g', 'l', '.', 'd', 9, 0,
  /* 2030 */ 'f', 'i', 'l', 'l', '.', 'd', 9, 0,
  /* 2038 */ 's', 'l', 'l', '.', 'd', 9, 0,
  /* 2045 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'd', 9, 0,
  /* 2055 */ 'f', 'f', 'q', 'l', '.', 'd', 9, 0,
  /* 2063 */ 's', 'r', 'l', '.', 'd', 9, 0,
  /* 2070 */ 'b', 'i', 'n', 's', 'l', '.', 'd', 9, 0,
  /* 2079 */ 'f', 'm', 'u', 'l', '.', 'd', 9, 0,
  /* 2087 */ 'i', 'l', 'v', 'l', '.', 'd', 9, 0,
  /* 2095 */ 'f', 'm', 'i', 'n', '.', 'd', 9, 0,
  /* 2103 */ 'c', '.', 'u', 'n', '.', 'd', 9, 0,
  /* 2111 */ 'f', 'c', 'u', 'n', '.', 'd', 9, 0,
  /* 2119 */ 'f', 's', 'u', 'n', '.', 'd', 9, 0,
  /* 2127 */ 'm', 'o', 'v', 'n', '.', 'd', 9, 0,
  /* 2135 */ 'f', 'r', 'c', 'p', '.', 'd', 9, 0,
  /* 2143 */ 'c', '.', 'e', 'q', '.', 'd', 9, 0,
  /* 2151 */ 'f', 'c', 'e', 'q', '.', 'd', 9, 0,
  /* 2159 */ 'c', '.', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 2168 */ 'f', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 2176 */ 'c', '.', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2185 */ 'f', 'c', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2194 */ 'f', 's', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2203 */ 's', 'r', 'a', 'r', '.', 'd', 9, 0,
  /* 2211 */ 'b', 'c', 'l', 'r', '.', 'd', 9, 0,
  /* 2219 */ 's', 'r', 'l', 'r', '.', 'd', 9, 0,
  /* 2227 */ 'f', 'c', 'o', 'r', '.', 'd', 9, 0,
  /* 2235 */ 'f', 's', 'o', 'r', '.', 'd', 9, 0,
  /* 2243 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'd', 9, 0,
  /* 2253 */ 'f', 'f', 'q', 'r', '.', 'd', 9, 0,
  /* 2261 */ 'b', 'i', 'n', 's', 'r', '.', 'd', 9, 0,
  /* 2270 */ 'i', 'l', 'v', 'r', '.', 'd', 9, 0,
  /* 2278 */ 'c', 'v', 't', '.', 's', '.', 'd', 9, 0,
  /* 2287 */ 'a', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2297 */ 'h', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2307 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2318 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'd', 9, 0,
  /* 2330 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2340 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2351 */ 'm', 'o', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2360 */ 'c', 'l', 'e', '_', 's', '.', 'd', 9, 0,
  /* 2369 */ 'a', 'v', 'e', '_', 's', '.', 'd', 9, 0,
  /* 2378 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2388 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2398 */ 'c', 'l', 't', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2408 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2418 */ 'm', 'i', 'n', '_', 's', '.', 'd', 9, 0,
  /* 2427 */ 'd', 'o', 't', 'p', '_', 's', '.', 'd', 9, 0,
  /* 2437 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'd', 9, 0,
  /* 2447 */ 's', 'u', 'b', 's', '_', 's', '.', 'd', 9, 0,
  /* 2457 */ 'a', 'd', 'd', 's', '_', 's', '.', 'd', 9, 0,
  /* 2467 */ 's', 'a', 't', '_', 's', '.', 'd', 9, 0,
  /* 2476 */ 'c', 'l', 't', '_', 's', '.', 'd', 9, 0,
  /* 2485 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 2496 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 2507 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'd', 9, 0,
  /* 2519 */ 'd', 'i', 'v', '_', 's', '.', 'd', 9, 0,
  /* 2528 */ 'm', 'a', 'x', '_', 's', '.', 'd', 9, 0,
  /* 2537 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'd', 9, 0,
  /* 2547 */ 'a', 'b', 's', '.', 'd', 9, 0,
  /* 2554 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'd', 9, 0,
  /* 2564 */ 's', 'p', 'l', 'a', 't', '.', 'd', 9, 0,
  /* 2573 */ 'b', 's', 'e', 't', '.', 'd', 9, 0,
  /* 2581 */ 'c', '.', 'n', 'g', 't', '.', 'd', 9, 0,
  /* 2590 */ 'c', '.', 'l', 't', '.', 'd', 9, 0,
  /* 2598 */ 'f', 'c', 'l', 't', '.', 'd', 9, 0,
  /* 2606 */ 'c', '.', 'o', 'l', 't', '.', 'd', 9, 0,
  /* 2615 */ 'f', 's', 'l', 't', '.', 'd', 9, 0,
  /* 2623 */ 'c', '.', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2632 */ 'f', 'c', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2641 */ 'f', 's', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2650 */ 'p', 'c', 'n', 't', '.', 'd', 9, 0,
  /* 2658 */ 'f', 'r', 'i', 'n', 't', '.', 'd', 9, 0,
  /* 2667 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'd', 9, 0,
  /* 2677 */ 'f', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 2686 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 2696 */ 's', 't', '.', 'd', 9, 0,
  /* 2702 */ 'm', 'o', 'v', 't', '.', 'd', 9, 0,
  /* 2710 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2720 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2730 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2741 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'd', 9, 0,
  /* 2753 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2763 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2774 */ 'm', 'o', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2783 */ 'c', 'l', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 2792 */ 'a', 'v', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 2801 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2811 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2821 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2831 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2841 */ 'm', 'i', 'n', '_', 'u', '.', 'd', 9, 0,
  /* 2850 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'd', 9, 0,
  /* 2860 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'd', 9, 0,
  /* 2870 */ 's', 'u', 'b', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2880 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2890 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2902 */ 's', 'a', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2911 */ 'c', 'l', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2920 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2931 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2942 */ 'd', 'i', 'v', '_', 'u', '.', 'd', 9, 0,
  /* 2951 */ 'm', 'a', 'x', '_', 'u', '.', 'd', 9, 0,
  /* 2960 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'd', 9, 0,
  /* 2970 */ 'm', 's', 'u', 'b', 'v', '.', 'd', 9, 0,
  /* 2979 */ 'm', 'a', 'd', 'd', 'v', '.', 'd', 9, 0,
  /* 2988 */ 'p', 'c', 'k', 'e', 'v', '.', 'd', 9, 0,
  /* 2997 */ 'i', 'l', 'v', 'e', 'v', '.', 'd', 9, 0,
  /* 3006 */ 'f', 'd', 'i', 'v', '.', 'd', 9, 0,
  /* 3014 */ 'm', 'u', 'l', 'v', '.', 'd', 9, 0,
  /* 3022 */ 'm', 'o', 'v', '.', 'd', 9, 0,
  /* 3029 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 'd', 9, 0,
  /* 3040 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 'd', 9, 0,
  /* 3051 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 'd', 9, 0,
  /* 3061 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 'd', 9, 0,
  /* 3072 */ 'c', 'v', 't', '.', 'w', '.', 'd', 9, 0,
  /* 3081 */ 'f', 'm', 'a', 'x', '.', 'd', 9, 0,
  /* 3089 */ 'b', 'z', '.', 'd', 9, 0,
  /* 3095 */ 'b', 'n', 'z', '.', 'd', 9, 0,
  /* 3102 */ 'm', 'o', 'v', 'z', '.', 'd', 9, 0,
  /* 3110 */ 's', 'c', 'd', 9, 0,
  /* 3115 */ 'd', 'a', 'd', 'd', 9, 0,
  /* 3121 */ 'm', 'a', 'd', 'd', 9, 0,
  /* 3127 */ 'd', 's', 'h', 'd', 9, 0,
  /* 3133 */ 'l', 'l', 'd', 9, 0,
  /* 3138 */ 'a', 'n', 'd', 9, 0,
  /* 3143 */ 'p', 'r', 'e', 'p', 'e', 'n', 'd', 9, 0,
  /* 3152 */ 'a', 'p', 'p', 'e', 'n', 'd', 9, 0,
  /* 3160 */ 's', 'd', 9, 0,
  /* 3164 */ 't', 'g', 'e', 9, 0,
  /* 3169 */ 'b', 'n', 'e', 9, 0,
  /* 3174 */ 't', 'n', 'e', 9, 0,
  /* 3179 */ 'm', 'o', 'v', 'e', 9, 0,
  /* 3185 */ 'b', 'c', '1', 'f', 9, 0,
  /* 3191 */ 'm', 'o', 'v', 'f', 9, 0,
  /* 3197 */ 'n', 'e', 'g', 9, 0,
  /* 3202 */ 'a', 'd', 'd', '_', 'a', '.', 'h', 9, 0,
  /* 3211 */ 'm', 'i', 'n', '_', 'a', '.', 'h', 9, 0,
  /* 3220 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'h', 9, 0,
  /* 3230 */ 'm', 'a', 'x', '_', 'a', '.', 'h', 9, 0,
  /* 3239 */ 's', 'r', 'a', '.', 'h', 9, 0,
  /* 3246 */ 'n', 'l', 'o', 'c', '.', 'h', 9, 0,
  /* 3254 */ 'n', 'l', 'z', 'c', '.', 'h', 9, 0,
  /* 3262 */ 's', 'l', 'd', '.', 'h', 9, 0,
  /* 3269 */ 'p', 'c', 'k', 'o', 'd', '.', 'h', 9, 0,
  /* 3278 */ 'i', 'l', 'v', 'o', 'd', '.', 'h', 9, 0,
  /* 3287 */ 'i', 'n', 's', 'v', 'e', '.', 'h', 9, 0,
  /* 3296 */ 'v', 's', 'h', 'f', '.', 'h', 9, 0,
  /* 3304 */ 'b', 'n', 'e', 'g', '.', 'h', 9, 0,
  /* 3312 */ 's', 'r', 'a', 'i', '.', 'h', 9, 0,
  /* 3320 */ 's', 'l', 'd', 'i', '.', 'h', 9, 0,
  /* 3328 */ 'b', 'n', 'e', 'g', 'i', '.', 'h', 9, 0,
  /* 3337 */ 's', 'l', 'l', 'i', '.', 'h', 9, 0,
  /* 3345 */ 's', 'r', 'l', 'i', '.', 'h', 9, 0,
  /* 3353 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'h', 9, 0,
  /* 3363 */ 'c', 'e', 'q', 'i', '.', 'h', 9, 0,
  /* 3371 */ 's', 'r', 'a', 'r', 'i', '.', 'h', 9, 0,
  /* 3380 */ 'b', 'c', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 3389 */ 's', 'r', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 3398 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'h', 9, 0,
  /* 3408 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'h', 9, 0,
  /* 3418 */ 'b', 's', 'e', 't', 'i', '.', 'h', 9, 0,
  /* 3427 */ 's', 'u', 'b', 'v', 'i', '.', 'h', 9, 0,
  /* 3436 */ 'a', 'd', 'd', 'v', 'i', '.', 'h', 9, 0,
  /* 3445 */ 'f', 'i', 'l', 'l', '.', 'h', 9, 0,
  /* 3453 */ 's', 'l', 'l', '.', 'h', 9, 0,
  /* 3460 */ 's', 'r', 'l', '.', 'h', 9, 0,
  /* 3467 */ 'b', 'i', 'n', 's', 'l', '.', 'h', 9, 0,
  /* 3476 */ 'i', 'l', 'v', 'l', '.', 'h', 9, 0,
  /* 3484 */ 'f', 'e', 'x', 'd', 'o', '.', 'h', 9, 0,
  /* 3493 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'h', 9, 0,
  /* 3503 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'h', 9, 0,
  /* 3513 */ 'm', 'u', 'l', '_', 'q', '.', 'h', 9, 0,
  /* 3522 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3533 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3544 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3554 */ 'c', 'e', 'q', '.', 'h', 9, 0,
  /* 3561 */ 'f', 't', 'q', '.', 'h', 9, 0,
  /* 3568 */ 's', 'r', 'a', 'r', '.', 'h', 9, 0,
  /* 3576 */ 'b', 'c', 'l', 'r', '.', 'h', 9, 0,
  /* 3584 */ 's', 'r', 'l', 'r', '.', 'h', 9, 0,
  /* 3592 */ 'b', 'i', 'n', 's', 'r', '.', 'h', 9, 0,
  /* 3601 */ 'i', 'l', 'v', 'r', '.', 'h', 9, 0,
  /* 3609 */ 'a', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3619 */ 'h', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3629 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3640 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3650 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3661 */ 'm', 'o', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3670 */ 'c', 'l', 'e', '_', 's', '.', 'h', 9, 0,
  /* 3679 */ 'a', 'v', 'e', '_', 's', '.', 'h', 9, 0,
  /* 3688 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3698 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3708 */ 'c', 'l', 't', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3718 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3728 */ 'm', 'i', 'n', '_', 's', '.', 'h', 9, 0,
  /* 3737 */ 'd', 'o', 't', 'p', '_', 's', '.', 'h', 9, 0,
  /* 3747 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'h', 9, 0,
  /* 3757 */ 'e', 'x', 't', 'r', '_', 's', '.', 'h', 9, 0,
  /* 3767 */ 's', 'u', 'b', 's', '_', 's', '.', 'h', 9, 0,
  /* 3777 */ 'a', 'd', 'd', 's', '_', 's', '.', 'h', 9, 0,
  /* 3787 */ 's', 'a', 't', '_', 's', '.', 'h', 9, 0,
  /* 3796 */ 'c', 'l', 't', '_', 's', '.', 'h', 9, 0,
  /* 3805 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'h', 9, 0,
  /* 3817 */ 'd', 'i', 'v', '_', 's', '.', 'h', 9, 0,
  /* 3826 */ 'e', 'x', 't', 'r', 'v', '_', 's', '.', 'h', 9, 0,
  /* 3837 */ 'm', 'a', 'x', '_', 's', '.', 'h', 9, 0,
  /* 3846 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'h', 9, 0,
  /* 3856 */ 's', 'p', 'l', 'a', 't', '.', 'h', 9, 0,
  /* 3865 */ 'b', 's', 'e', 't', '.', 'h', 9, 0,
  /* 3873 */ 'p', 'c', 'n', 't', '.', 'h', 9, 0,
  /* 3881 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'h', 9, 0,
  /* 3891 */ 's', 't', '.', 'h', 9, 0,
  /* 3897 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3907 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3917 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3928 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3938 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3949 */ 'm', 'o', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3958 */ 'c', 'l', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 3967 */ 'a', 'v', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 3976 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3986 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3996 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 4006 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 4016 */ 'm', 'i', 'n', '_', 'u', '.', 'h', 9, 0,
  /* 4025 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'h', 9, 0,
  /* 4035 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'h', 9, 0,
  /* 4045 */ 's', 'u', 'b', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4055 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4065 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4077 */ 's', 'a', 't', '_', 'u', '.', 'h', 9, 0,
  /* 4086 */ 'c', 'l', 't', '_', 'u', '.', 'h', 9, 0,
  /* 4095 */ 'd', 'i', 'v', '_', 'u', '.', 'h', 9, 0,
  /* 4104 */ 'm', 'a', 'x', '_', 'u', '.', 'h', 9, 0,
  /* 4113 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'h', 9, 0,
  /* 4123 */ 'm', 's', 'u', 'b', 'v', '.', 'h', 9, 0,
  /* 4132 */ 'm', 'a', 'd', 'd', 'v', '.', 'h', 9, 0,
  /* 4141 */ 'p', 'c', 'k', 'e', 'v', '.', 'h', 9, 0,
  /* 4150 */ 'i', 'l', 'v', 'e', 'v', '.', 'h', 9, 0,
  /* 4159 */ 'm', 'u', 'l', 'v', '.', 'h', 9, 0,
  /* 4167 */ 'b', 'z', '.', 'h', 9, 0,
  /* 4173 */ 'b', 'n', 'z', '.', 'h', 9, 0,
  /* 4180 */ 'd', 's', 'b', 'h', 9, 0,
  /* 4186 */ 'w', 's', 'b', 'h', 9, 0,
  /* 4192 */ 's', 'e', 'h', 9, 0,
  /* 4197 */ 'l', 'h', 9, 0,
  /* 4201 */ 's', 'h', 'r', 'a', '.', 'p', 'h', 9, 0,
  /* 4210 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4224 */ 'p', 'r', 'e', 'c', 'r', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4237 */ 'p', 'r', 'e', 'c', 'r', 'q', 'u', '_', 's', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4254 */ 'c', 'm', 'p', '.', 'l', 'e', '.', 'p', 'h', 9, 0,
  /* 4265 */ 's', 'u', 'b', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 4275 */ 'a', 'd', 'd', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 4285 */ 'p', 'i', 'c', 'k', '.', 'p', 'h', 9, 0,
  /* 4294 */ 's', 'h', 'l', 'l', '.', 'p', 'h', 9, 0,
  /* 4303 */ 'r', 'e', 'p', 'l', '.', 'p', 'h', 9, 0,
  /* 4312 */ 's', 'h', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 4321 */ 'p', 'a', 'c', 'k', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 4332 */ 'm', 'u', 'l', '.', 'p', 'h', 9, 0,
  /* 4340 */ 's', 'u', 'b', 'q', '.', 'p', 'h', 9, 0,
  /* 4349 */ 'a', 'd', 'd', 'q', '.', 'p', 'h', 9, 0,
  /* 4358 */ 'c', 'm', 'p', '.', 'e', 'q', '.', 'p', 'h', 9, 0,
  /* 4369 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4380 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4392 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4404 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4416 */ 's', 'h', 'l', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4427 */ 'm', 'u', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4437 */ 's', 'u', 'b', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4448 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4459 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4470 */ 'a', 'b', 's', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4481 */ 's', 'u', 'b', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4492 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4503 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4515 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'p', 'h', 9, 0,
  /* 4527 */ 'c', 'm', 'p', '.', 'l', 't', '.', 'p', 'h', 9, 0,
  /* 4538 */ 's', 'u', 'b', 'u', '.', 'p', 'h', 9, 0,
  /* 4547 */ 'a', 'd', 'd', 'u', '.', 'p', 'h', 9, 0,
  /* 4556 */ 's', 'h', 'r', 'a', 'v', '.', 'p', 'h', 9, 0,
  /* 4566 */ 's', 'h', 'l', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4576 */ 'r', 'e', 'p', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4586 */ 's', 'h', 'r', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4596 */ 'd', 'p', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4606 */ 'd', 'p', 'a', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4621 */ 'd', 'p', 's', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4636 */ 'm', 'u', 'l', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4648 */ 'd', 'p', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4661 */ 'm', 'u', 'l', 's', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4676 */ 'd', 'p', 's', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4689 */ 'd', 'p', 'a', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4703 */ 'd', 'p', 's', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4717 */ 'd', 'p', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4727 */ 'd', 'p', 'a', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4738 */ 'd', 'p', 's', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4749 */ 's', 'h', 9, 0,
  /* 4753 */ 'd', 'a', 'd', 'd', 'i', 9, 0,
  /* 4760 */ 'a', 'n', 'd', 'i', 9, 0,
  /* 4766 */ 't', 'g', 'e', 'i', 9, 0,
  /* 4772 */ 't', 'n', 'e', 'i', 9, 0,
  /* 4778 */ 'm', 'f', 'h', 'i', 9, 0,
  /* 4784 */ 'm', 't', 'h', 'i', 9, 0,
  /* 4790 */ '.', 'a', 'l', 'i', 'g', 'n', 32, '2', 10, 9, 'l', 'i', 9, 0,
  /* 4804 */ 'c', 'm', 'p', 'i', 9, 0,
  /* 4810 */ 't', 'e', 'q', 'i', 9, 0,
  /* 4816 */ 'x', 'o', 'r', 'i', 9, 0,
  /* 4822 */ 's', 'l', 't', 'i', 9, 0,
  /* 4828 */ 't', 'l', 't', 'i', 9, 0,
  /* 4834 */ 'l', 'u', 'i', 9, 0,
  /* 4839 */ 'j', 9, 0,
  /* 4842 */ 'b', 'r', 'e', 'a', 'k', 9, 0,
  /* 4849 */ 'c', 'v', 't', '.', 'd', '.', 'l', 9, 0,
  /* 4858 */ 'c', 'v', 't', '.', 's', '.', 'l', 9, 0,
  /* 4867 */ 'j', 'a', 'l', 9, 0,
  /* 4872 */ 'b', 'g', 'e', 'z', 'a', 'l', 9, 0,
  /* 4880 */ 'b', 'l', 't', 'z', 'a', 'l', 9, 0,
  /* 4888 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4900 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4912 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4928 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4943 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4959 */ 'l', 'd', 'l', 9, 0,
  /* 4964 */ 's', 'd', 'l', 9, 0,
  /* 4969 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4983 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4997 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 5010 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 5025 */ 's', 'y', 's', 'c', 'a', 'l', 'l', 9, 0,
  /* 5034 */ 'd', 's', 'l', 'l', 9, 0,
  /* 5040 */ 'd', 's', 'r', 'l', 9, 0,
  /* 5046 */ 'm', 'u', 'l', 9, 0,
  /* 5051 */ 'l', 'w', 'l', 9, 0,
  /* 5056 */ 's', 'w', 'l', 9, 0,
  /* 5061 */ 'b', 'a', 'l', 'i', 'g', 'n', 9, 0,
  /* 5069 */ 'm', 'o', 'v', 'n', 9, 0,
  /* 5075 */ 'd', 'c', 'l', 'o', 9, 0,
  /* 5081 */ 'm', 'f', 'l', 'o', 9, 0,
  /* 5087 */ 's', 'h', 'i', 'l', 'o', 9, 0,
  /* 5094 */ 'm', 't', 'l', 'o', 9, 0,
  /* 5100 */ 'e', 'x', 't', 'p', 'd', 'p', 9, 0,
  /* 5108 */ 'm', 't', 'h', 'l', 'i', 'p', 9, 0,
  /* 5116 */ 'c', 'm', 'p', 9, 0,
  /* 5121 */ 'l', 'o', 'a', 'd', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 5137 */ 's', 't', 'o', 'r', 'e', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 5154 */ 'r', 'd', 'd', 's', 'p', 9, 0,
  /* 5161 */ 'w', 'r', 'd', 's', 'p', 9, 0,
  /* 5168 */ 'e', 'x', 't', 'p', 9, 0,
  /* 5174 */ 'b', 'e', 'q', 9, 0,
  /* 5179 */ 't', 'e', 'q', 9, 0,
  /* 5184 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5196 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5208 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5224 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5239 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5255 */ 'l', 'd', 'r', 9, 0,
  /* 5260 */ 's', 'd', 'r', 9, 0,
  /* 5265 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5279 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5293 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5306 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5321 */ 'j', 'r', 9, 0,
  /* 5325 */ 'j', 'a', 'l', 'r', 9, 0,
  /* 5331 */ 'n', 'o', 'r', 9, 0,
  /* 5336 */ 'x', 'o', 'r', 9, 0,
  /* 5341 */ 'd', 'r', 'o', 't', 'r', 9, 0,
  /* 5348 */ 'r', 'd', 'h', 'w', 'r', 9, 0,
  /* 5355 */ 'l', 'w', 'r', 9, 0,
  /* 5360 */ 's', 'w', 'r', 9, 0,
  /* 5365 */ 'n', 'm', 's', 'u', 'b', '.', 's', 9, 0,
  /* 5374 */ 'c', 'v', 't', '.', 'd', '.', 's', 9, 0,
  /* 5383 */ 'n', 'm', 'a', 'd', 'd', '.', 's', 9, 0,
  /* 5392 */ 'c', '.', 'n', 'g', 'e', '.', 's', 9, 0,
  /* 5401 */ 'c', '.', 'l', 'e', '.', 's', 9, 0,
  /* 5409 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 's', 9, 0,
  /* 5419 */ 'c', '.', 'o', 'l', 'e', '.', 's', 9, 0,
  /* 5428 */ 'c', '.', 'u', 'l', 'e', '.', 's', 9, 0,
  /* 5437 */ 'c', '.', 'f', '.', 's', 9, 0,
  /* 5444 */ 'c', '.', 's', 'f', '.', 's', 9, 0,
  /* 5452 */ 'm', 'o', 'v', 'f', '.', 's', 9, 0,
  /* 5460 */ 'n', 'e', 'g', '.', 's', 9, 0,
  /* 5467 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 's', 9, 0,
  /* 5478 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 's', 9, 0,
  /* 5489 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 's', 9, 0,
  /* 5499 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 's', 9, 0,
  /* 5510 */ 'c', 'v', 't', '.', 'l', '.', 's', 9, 0,
  /* 5519 */ 'c', '.', 'n', 'g', 'l', '.', 's', 9, 0,
  /* 5528 */ 'm', 'u', 'l', '.', 's', 9, 0,
  /* 5535 */ 'c', '.', 'u', 'n', '.', 's', 9, 0,
  /* 5543 */ 'm', 'o', 'v', 'n', '.', 's', 9, 0,
  /* 5551 */ 'c', '.', 'e', 'q', '.', 's', 9, 0,
  /* 5559 */ 'c', '.', 's', 'e', 'q', '.', 's', 9, 0,
  /* 5568 */ 'c', '.', 'u', 'e', 'q', '.', 's', 9, 0,
  /* 5577 */ 'a', 'b', 's', '.', 's', 9, 0,
  /* 5584 */ 'c', '.', 'n', 'g', 't', '.', 's', 9, 0,
  /* 5593 */ 'c', '.', 'l', 't', '.', 's', 9, 0,
  /* 5601 */ 'c', '.', 'o', 'l', 't', '.', 's', 9, 0,
  /* 5610 */ 'c', '.', 'u', 'l', 't', '.', 's', 9, 0,
  /* 5619 */ 's', 'q', 'r', 't', '.', 's', 9, 0,
  /* 5627 */ 'm', 'o', 'v', 't', '.', 's', 9, 0,
  /* 5635 */ 'd', 'i', 'v', '.', 's', 9, 0,
  /* 5642 */ 'm', 'o', 'v', '.', 's', 9, 0,
  /* 5649 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 's', 9, 0,
  /* 5660 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 's', 9, 0,
  /* 5671 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 's', 9, 0,
  /* 5681 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 's', 9, 0,
  /* 5692 */ 'c', 'v', 't', '.', 'w', '.', 's', 9, 0,
  /* 5701 */ 'm', 'o', 'v', 'z', '.', 's', 9, 0,
  /* 5709 */ 'b', 'c', '1', 't', 9, 0,
  /* 5715 */ 's', 'l', 't', 9, 0,
  /* 5720 */ 't', 'l', 't', 9, 0,
  /* 5725 */ 'd', 'm', 'u', 'l', 't', 9, 0,
  /* 5732 */ 'n', 'o', 't', 9, 0,
  /* 5737 */ 'm', 'o', 'v', 't', 9, 0,
  /* 5743 */ 'l', 'b', 'u', 9, 0,
  /* 5748 */ 'd', 's', 'u', 'b', 'u', 9, 0,
  /* 5755 */ 'm', 's', 'u', 'b', 'u', 9, 0,
  /* 5762 */ 'd', 'a', 'd', 'd', 'u', 9, 0,
  /* 5769 */ 'm', 'a', 'd', 'd', 'u', 9, 0,
  /* 5776 */ 't', 'g', 'e', 'u', 9, 0,
  /* 5782 */ 'l', 'h', 'u', 9, 0,
  /* 5787 */ 'd', 'a', 'd', 'd', 'i', 'u', 9, 0,
  /* 5795 */ 't', 'g', 'e', 'i', 'u', 9, 0,
  /* 5802 */ 's', 'l', 't', 'i', 'u', 9, 0,
  /* 5809 */ 't', 'l', 't', 'i', 'u', 9, 0,
  /* 5816 */ 's', 'l', 't', 'u', 9, 0,
  /* 5822 */ 't', 'l', 't', 'u', 9, 0,
  /* 5828 */ 'd', 'm', 'u', 'l', 't', 'u', 9, 0,
  /* 5836 */ 'l', 'w', 'u', 9, 0,
  /* 5841 */ 'a', 'n', 'd', '.', 'v', 9, 0,
  /* 5848 */ 'm', 'o', 'v', 'e', '.', 'v', 9, 0,
  /* 5856 */ 'b', 's', 'e', 'l', '.', 'v', 9, 0,
  /* 5864 */ 'n', 'o', 'r', '.', 'v', 9, 0,
  /* 5871 */ 'x', 'o', 'r', '.', 'v', 9, 0,
  /* 5878 */ 'b', 'z', '.', 'v', 9, 0,
  /* 5884 */ 'b', 'm', 'z', '.', 'v', 9, 0,
  /* 5891 */ 'b', 'n', 'z', '.', 'v', 9, 0,
  /* 5898 */ 'b', 'm', 'n', 'z', '.', 'v', 9, 0,
  /* 5906 */ 'd', 's', 'r', 'a', 'v', 9, 0,
  /* 5913 */ 'b', 'i', 't', 'r', 'e', 'v', 9, 0,
  /* 5921 */ 'd', 's', 'l', 'l', 'v', 9, 0,
  /* 5928 */ 'd', 's', 'r', 'l', 'v', 9, 0,
  /* 5935 */ 's', 'h', 'i', 'l', 'o', 'v', 9, 0,
  /* 5943 */ 'e', 'x', 't', 'p', 'd', 'p', 'v', 9, 0,
  /* 5952 */ 'e', 'x', 't', 'p', 'v', 9, 0,
  /* 5959 */ 'd', 'r', 'o', 't', 'r', 'v', 9, 0,
  /* 5967 */ 'i', 'n', 's', 'v', 9, 0,
  /* 5973 */ 'f', 'l', 'o', 'g', '2', '.', 'w', 9, 0,
  /* 5982 */ 'f', 'e', 'x', 'p', '2', '.', 'w', 9, 0,
  /* 5991 */ 'a', 'd', 'd', '_', 'a', '.', 'w', 9, 0,
  /* 6000 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'w', 9, 0,
  /* 6010 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'w', 9, 0,
  /* 6020 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'w', 9, 0,
  /* 6030 */ 's', 'r', 'a', '.', 'w', 9, 0,
  /* 6037 */ 'f', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 6045 */ 'f', 'm', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 6054 */ 'n', 'l', 'o', 'c', '.', 'w', 9, 0,
  /* 6062 */ 'n', 'l', 'z', 'c', '.', 'w', 9, 0,
  /* 6070 */ 'c', 'v', 't', '.', 'd', '.', 'w', 9, 0,
  /* 6079 */ 'f', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 6087 */ 'f', 'm', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 6096 */ 's', 'l', 'd', '.', 'w', 9, 0,
  /* 6103 */ 'p', 'c', 'k', 'o', 'd', '.', 'w', 9, 0,
  /* 6112 */ 'i', 'l', 'v', 'o', 'd', '.', 'w', 9, 0,
  /* 6121 */ 'f', 'c', 'l', 'e', '.', 'w', 9, 0,
  /* 6129 */ 'f', 's', 'l', 'e', '.', 'w', 9, 0,
  /* 6137 */ 'f', 'c', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 6146 */ 'f', 's', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 6155 */ 'f', 'c', 'n', 'e', '.', 'w', 9, 0,
  /* 6163 */ 'f', 's', 'n', 'e', '.', 'w', 9, 0,
  /* 6171 */ 'f', 'c', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 6180 */ 'f', 's', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 6189 */ 'i', 'n', 's', 'v', 'e', '.', 'w', 9, 0,
  /* 6198 */ 'f', 'c', 'a', 'f', '.', 'w', 9, 0,
  /* 6206 */ 'f', 's', 'a', 'f', '.', 'w', 9, 0,
  /* 6214 */ 'v', 's', 'h', 'f', '.', 'w', 9, 0,
  /* 6222 */ 'b', 'n', 'e', 'g', '.', 'w', 9, 0,
  /* 6230 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6246 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6259 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '_', 'r', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6277 */ 'p', 'r', 'e', 'c', 'r', 'q', '_', 'r', 's', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6293 */ 's', 'u', 'b', 'q', 'h', '.', 'w', 9, 0,
  /* 6302 */ 'a', 'd', 'd', 'q', 'h', '.', 'w', 9, 0,
  /* 6311 */ 's', 'r', 'a', 'i', '.', 'w', 9, 0,
  /* 6319 */ 's', 'l', 'd', 'i', '.', 'w', 9, 0,
  /* 6327 */ 'b', 'n', 'e', 'g', 'i', '.', 'w', 9, 0,
  /* 6336 */ 's', 'l', 'l', 'i', '.', 'w', 9, 0,
  /* 6344 */ 's', 'r', 'l', 'i', '.', 'w', 9, 0,
  /* 6352 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'w', 9, 0,
  /* 6362 */ 'c', 'e', 'q', 'i', '.', 'w', 9, 0,
  /* 6370 */ 's', 'r', 'a', 'r', 'i', '.', 'w', 9, 0,
  /* 6379 */ 'b', 'c', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 6388 */ 's', 'r', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 6397 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'w', 9, 0,
  /* 6407 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'w', 9, 0,
  /* 6417 */ 'b', 's', 'e', 't', 'i', '.', 'w', 9, 0,
  /* 6426 */ 's', 'u', 'b', 'v', 'i', '.', 'w', 9, 0,
  /* 6435 */ 'a', 'd', 'd', 'v', 'i', '.', 'w', 9, 0,
  /* 6444 */ 'd', 'p', 'a', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 6457 */ 'd', 'p', 's', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 6470 */ 'f', 'i', 'l', 'l', '.', 'w', 9, 0,
  /* 6478 */ 's', 'l', 'l', '.', 'w', 9, 0,
  /* 6485 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'w', 9, 0,
  /* 6495 */ 'f', 'f', 'q', 'l', '.', 'w', 9, 0,
  /* 6503 */ 's', 'r', 'l', '.', 'w', 9, 0,
  /* 6510 */ 'b', 'i', 'n', 's', 'l', '.', 'w', 9, 0,
  /* 6519 */ 'f', 'm', 'u', 'l', '.', 'w', 9, 0,
  /* 6527 */ 'i', 'l', 'v', 'l', '.', 'w', 9, 0,
  /* 6535 */ 'f', 'm', 'i', 'n', '.', 'w', 9, 0,
  /* 6543 */ 'f', 'c', 'u', 'n', '.', 'w', 9, 0,
  /* 6551 */ 'f', 's', 'u', 'n', '.', 'w', 9, 0,
  /* 6559 */ 'f', 'e', 'x', 'd', 'o', '.', 'w', 9, 0,
  /* 6568 */ 'f', 'r', 'c', 'p', '.', 'w', 9, 0,
  /* 6576 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'w', 9, 0,
  /* 6586 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'w', 9, 0,
  /* 6596 */ 'm', 'u', 'l', '_', 'q', '.', 'w', 9, 0,
  /* 6605 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6616 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6627 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6637 */ 'f', 'c', 'e', 'q', '.', 'w', 9, 0,
  /* 6645 */ 'f', 's', 'e', 'q', '.', 'w', 9, 0,
  /* 6653 */ 'f', 'c', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 6662 */ 'f', 's', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 6671 */ 'f', 't', 'q', '.', 'w', 9, 0,
  /* 6678 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'w', 9, 0,
  /* 6688 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 6699 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 6710 */ 'e', 'x', 't', 'r', '_', 'r', '.', 'w', 9, 0,
  /* 6720 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 6731 */ 'e', 'x', 't', 'r', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 6742 */ 's', 'r', 'a', 'r', '.', 'w', 9, 0,
  /* 6750 */ 'b', 'c', 'l', 'r', '.', 'w', 9, 0,
  /* 6758 */ 's', 'r', 'l', 'r', '.', 'w', 9, 0,
  /* 6766 */ 'f', 'c', 'o', 'r', '.', 'w', 9, 0,
  /* 6774 */ 'f', 's', 'o', 'r', '.', 'w', 9, 0,
  /* 6782 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'w', 9, 0,
  /* 6792 */ 'f', 'f', 'q', 'r', '.', 'w', 9, 0,
  /* 6800 */ 'b', 'i', 'n', 's', 'r', '.', 'w', 9, 0,
  /* 6809 */ 'e', 'x', 't', 'r', '.', 'w', 9, 0,
  /* 6817 */ 'i', 'l', 'v', 'r', '.', 'w', 9, 0,
  /* 6825 */ 'c', 'v', 't', '.', 's', '.', 'w', 9, 0,
  /* 6834 */ 'a', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6844 */ 'h', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6854 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6865 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'w', 9, 0,
  /* 6877 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6887 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6898 */ 'm', 'o', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6907 */ 'c', 'l', 'e', '_', 's', '.', 'w', 9, 0,
  /* 6916 */ 'a', 'v', 'e', '_', 's', '.', 'w', 9, 0,
  /* 6925 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6935 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6945 */ 'c', 'l', 't', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6955 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6965 */ 's', 'h', 'l', 'l', '_', 's', '.', 'w', 9, 0,
  /* 6975 */ 'm', 'i', 'n', '_', 's', '.', 'w', 9, 0,
  /* 6984 */ 'd', 'o', 't', 'p', '_', 's', '.', 'w', 9, 0,
  /* 6994 */ 's', 'u', 'b', 'q', '_', 's', '.', 'w', 9, 0,
  /* 7004 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'w', 9, 0,
  /* 7014 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'w', 9, 0,
  /* 7024 */ 'a', 'b', 's', 'q', '_', 's', '.', 'w', 9, 0,
  /* 7034 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'w', 9, 0,
  /* 7044 */ 's', 'u', 'b', 's', '_', 's', '.', 'w', 9, 0,
  /* 7054 */ 'a', 'd', 'd', 's', '_', 's', '.', 'w', 9, 0,
  /* 7064 */ 's', 'a', 't', '_', 's', '.', 'w', 9, 0,
  /* 7073 */ 'c', 'l', 't', '_', 's', '.', 'w', 9, 0,
  /* 7082 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 7093 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 7104 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'w', 9, 0,
  /* 7116 */ 'd', 'i', 'v', '_', 's', '.', 'w', 9, 0,
  /* 7125 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'w', 9, 0,
  /* 7136 */ 'm', 'a', 'x', '_', 's', '.', 'w', 9, 0,
  /* 7145 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'w', 9, 0,
  /* 7155 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7166 */ 'e', 'x', 't', 'r', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7177 */ 'e', 'x', 't', 'r', 'v', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7189 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'w', 9, 0,
  /* 7199 */ 's', 'p', 'l', 'a', 't', '.', 'w', 9, 0,
  /* 7208 */ 'b', 's', 'e', 't', '.', 'w', 9, 0,
  /* 7216 */ 'f', 'c', 'l', 't', '.', 'w', 9, 0,
  /* 7224 */ 'f', 's', 'l', 't', '.', 'w', 9, 0,
  /* 7232 */ 'f', 'c', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 7241 */ 'f', 's', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 7250 */ 'p', 'c', 'n', 't', '.', 'w', 9, 0,
  /* 7258 */ 'f', 'r', 'i', 'n', 't', '.', 'w', 9, 0,
  /* 7267 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'w', 9, 0,
  /* 7277 */ 'f', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 7286 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 7296 */ 's', 't', '.', 'w', 9, 0,
  /* 7302 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7312 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7322 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7333 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'w', 9, 0,
  /* 7345 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7355 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7366 */ 'm', 'o', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7375 */ 'c', 'l', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 7384 */ 'a', 'v', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 7393 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7403 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7413 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7423 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7433 */ 'm', 'i', 'n', '_', 'u', '.', 'w', 9, 0,
  /* 7442 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'w', 9, 0,
  /* 7452 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'w', 9, 0,
  /* 7462 */ 's', 'u', 'b', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7472 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7482 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7494 */ 's', 'a', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7503 */ 'c', 'l', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7512 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7523 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7534 */ 'd', 'i', 'v', '_', 'u', '.', 'w', 9, 0,
  /* 7543 */ 'm', 'a', 'x', '_', 'u', '.', 'w', 9, 0,
  /* 7552 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'w', 9, 0,
  /* 7562 */ 'm', 's', 'u', 'b', 'v', '.', 'w', 9, 0,
  /* 7571 */ 'm', 'a', 'd', 'd', 'v', '.', 'w', 9, 0,
  /* 7580 */ 'p', 'c', 'k', 'e', 'v', '.', 'w', 9, 0,
  /* 7589 */ 'i', 'l', 'v', 'e', 'v', '.', 'w', 9, 0,
  /* 7598 */ 'f', 'd', 'i', 'v', '.', 'w', 9, 0,
  /* 7606 */ 'm', 'u', 'l', 'v', '.', 'w', 9, 0,
  /* 7614 */ 'e', 'x', 't', 'r', 'v', '.', 'w', 9, 0,
  /* 7623 */ 'f', 'm', 'a', 'x', '.', 'w', 9, 0,
  /* 7631 */ 'b', 'z', '.', 'w', 9, 0,
  /* 7637 */ 'b', 'n', 'z', '.', 'w', 9, 0,
  /* 7644 */ 'l', 'w', 9, 0,
  /* 7648 */ 's', 'w', 9, 0,
  /* 7652 */ 'l', 'h', 'x', 9, 0,
  /* 7657 */ 'l', 'b', 'u', 'x', 9, 0,
  /* 7663 */ 'l', 'w', 'x', 9, 0,
  /* 7668 */ 'b', 'g', 'e', 'z', 9, 0,
  /* 7674 */ 'b', 'l', 'e', 'z', 9, 0,
  /* 7680 */ 'b', 'n', 'e', 'z', 9, 0,
  /* 7686 */ 'b', 't', 'n', 'e', 'z', 9, 0,
  /* 7693 */ 'd', 'c', 'l', 'z', 9, 0,
  /* 7699 */ 'b', 'e', 'q', 'z', 9, 0,
  /* 7705 */ 'b', 't', 'e', 'q', 'z', 9, 0,
  /* 7712 */ 'b', 'g', 't', 'z', 9, 0,
  /* 7718 */ 'b', 'l', 't', 'z', 9, 0,
  /* 7724 */ 'm', 'o', 'v', 'z', 9, 0,
  /* 7730 */ 's', 'e', 'b', 9, 32, 0,
  /* 7736 */ 'j', 'r', 'c', 9, 32, 0,
  /* 7742 */ 's', 'e', 'h', 9, 32, 0,
  /* 7748 */ 'd', 'd', 'i', 'v', 'u', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 7762 */ 'd', 'd', 'i', 'v', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 7775 */ 'a', 'd', 'd', 'i', 'u', 9, '$', 's', 'p', ',', 32, 0,
  /* 7787 */ 's', 'y', 'n', 'c', 32, 0,
  /* 7793 */ 9, '.', 'w', 'o', 'r', 'd', 32, 0,
  /* 7801 */ 'd', 'i', 'n', 's', 'm', 32, 0,
  /* 7808 */ 'd', 'e', 'x', 't', 'm', 32, 0,
  /* 7815 */ 'd', 'i', 'n', 's', 32, 0,
  /* 7821 */ 'd', 'e', 'x', 't', 32, 0,
  /* 7827 */ 'd', 'i', 'n', 's', 'u', 32, 0,
  /* 7834 */ 'd', 'e', 'x', 't', 'u', 32, 0,
  /* 7841 */ 'c', '.', 0,
  /* 7844 */ 'b', 'r', 'e', 'a', 'k', 32, '0', 0,
  /* 7852 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 7865 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 7872 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 7882 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 7897 */ 'j', 'r', 'c', 9, 32, '$', 'r', 'a', 0,
  /* 7906 */ 'j', 'r', 9, 32, '$', 'r', 'a', 0,
  /* 7914 */ 'f', 'o', 'o', 0,
  /* 7918 */ 'd', 'e', 'r', 'e', 't', 0,
  /* 7924 */ 'w', 'a', 'i', 't', 0,
  };
#endif

  // Emit the opcode for the instruction.
  uint64_t Bits1 = OpInfo[MCInst_getOpcode(MI)];
  uint64_t Bits2 = OpInfo2[MCInst_getOpcode(MI)];
  uint64_t Bits = (Bits2 << 32) | Bits1;
  // assert(Bits != 0 && "Cannot print this instruction.");
#ifndef CAPSTONE_DIET
  SStream_concat(O, "%s", AsmStrs+(Bits & 8191)-1);
#endif


  // Fragment 0 encoded into 3 bits for 5 unique commands.
  //printf("Frag-0: %"PRIu64"\n", (Bits >> 13) & 7);
  switch ((Bits >> 13) & 7) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, Break16, CONSTPOOL_EN...
    return;
    break;
  case 1:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // CTC1, CTC1_MM, DMTC1, MTC1, MTC1_MM, MTHC1, MTHC1_MM, MTHI_DSP, MTHLIP...
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 3:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64, FCMP_S32, FCMP_S32_MM
    printFCCOperand(MI, 2, O); 
    break;
  case 4:
    // SelBeqZ, SelBneZ, SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZ...
    printOperand(MI, 3, O); 
    break;
  }


  // Fragment 1 encoded into 4 bits for 15 unique commands.
  //printf("Frag-1: %"PRIu64"\n", (Bits >> 16) & 15);
  switch ((Bits >> 16) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    SStream_concat(O, "%s", ", "); 
    break;
  case 1:
    // AddiuRxPcImmX16
    SStream_concat(O, "%s", ", $pc, "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 2:
    // AddiuSpImm16, Bimm16
    SStream_concat(O, "%s", " # 16 bit inst"); 
    return;
    break;
  case 3:
    // AddiuSpImmX16, BPOSGE32, BimmX16, BteqzX16, BtnezX16, Constant32, DI, ...
    return;
    break;
  case 4:
    // Bteqz16, Btnez16
    SStream_concat(O, "%s", "  # 16 bit inst"); 
    return;
    break;
  case 5:
    // CTC1, CTC1_MM, DMTC1, MTC1, MTC1_MM, MTHC1, MTHC1_MM, MTHI_DSP, MTHLIP...
    printOperand(MI, 0, O); 
    return;
    break;
  case 6:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64
    SStream_concat(O, "%s", ".d\t"); 
    printOperand(MI, 0, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 7:
    // FCMP_S32, FCMP_S32_MM
    SStream_concat(O, "%s", ".s\t"); 
    printOperand(MI, 0, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 8:
    // INSERT_B, INSERT_D, INSERT_H, INSERT_W, INSVE_B, INSVE_D, INSVE_H, INS...
    SStream_concat(O, "%s", "["); 
    break;
  case 9:
    // Jal16
    SStream_concat(O, "%s", "\n\tnop"); 
    return;
    break;
  case 10:
    // JalB16
    SStream_concat(O, "%s", "\t# branch\n\tnop"); 
    return;
    break;
  case 11:
    // LwConstant32
    SStream_concat(O, "%s", ", 1f\n\tb\t2f\n\t.align\t2\n1: \t.word\t"); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", "\n2:"); 
    return;
    break;
  case 12:
    // MultRxRyRz16, MultuRxRyRz16, SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImm...
    printOperand(MI, 2, O); 
    break;
  case 13:
    // SC, SCD
    printMemOperand(MI, 2, O); 
    return;
    break;
  case 14:
    // SelBeqZ, SelBneZ
    SStream_concat(O, "%s", ", .+4\n\t\n\tmove "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 4 bits for 10 unique commands.
  //printf("Frag-2: %"PRIu64"\n", (Bits >> 20) & 15);
  switch ((Bits >> 20) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // AddiuRxRxImm16, AddiuRxRxImmX16, AndRxRxRy16, BINSLI_B, BINSLI_D, BINS...
    printOperand(MI, 2, O); 
    break;
  case 2:
    // AddiuRxRyOffMemX16, LEA_ADDiu, LEA_ADDiu64, LEA_ADDiu_MM
    printMemOperandEA(MI, 1, O); 
    return;
    break;
  case 3:
    // INSERT_B, INSERT_D, INSERT_H, INSERT_W
    printUnsignedImm(MI, 3, O); 
    SStream_concat(O, "%s", "], "); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // INSVE_B, INSVE_D, INSVE_H, INSVE_W
    printUnsignedImm(MI, 2, O); 
    SStream_concat(O, "%s", "], "); 
    printOperand(MI, 3, O); 
    SStream_concat(O, "%s", "[0]"); 
    return;
    break;
  case 5:
    // LB, LB64, LB_MM, LBu, LBu64, LBu_MM, LD, LDC1, LDC164, LDC1_MM, LDC2, ...
    printMemOperand(MI, 1, O); 
    return;
    break;
  case 6:
    // LUi, LUi64, LUi_MM, LoadAddr32Imm, LoadImm32Reg, RDDSP, REPL_PH, REPL_...
    printUnsignedImm(MI, 1, O); 
    return;
    break;
  case 7:
    // MultRxRyRz16, MultuRxRyRz16
    SStream_concat(O, "%s", "\n\tmflo\t"); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 8:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    printOperand(MI, 4, O); 
    break;
  case 9:
    // SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImmX16, SltuCCRxRy16, SltuRxRyRz...
    SStream_concat(O, "%s", "\n\tmove\t"); 
    printOperand(MI, 0, O); 
    SStream_concat(O, "%s", ", $t8"); 
    return;
    break;
  }


  // Fragment 3 encoded into 4 bits for 15 unique commands.
  //printf("Frag-3: %"PRIu64"\n", (Bits >> 24) & 15);
  switch ((Bits >> 24) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, AddiuRxImmX16, AddiuRxRxImmX16, AndRxR...
    return;
    break;
  case 1:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    SStream_concat(O, "%s", ", "); 
    break;
  case 2:
    // AddiuRxRxImm16, LwRxPcTcp16
    SStream_concat(O, "%s", "\t# 16 bit inst"); 
    return;
    break;
  case 3:
    // BeqzRxImm16, BnezRxImm16
    SStream_concat(O, "%s", "  # 16 bit inst"); 
    return;
    break;
  case 4:
    // BteqzT8CmpX16, BteqzT8CmpiX16, BteqzT8SltX16, BteqzT8SltiX16, BteqzT8S...
    SStream_concat(O, "%s", "\n\tbteqz\t"); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 5:
    // BtnezT8CmpX16, BtnezT8CmpiX16, BtnezT8SltX16, BtnezT8SltiX16, BtnezT8S...
    SStream_concat(O, "%s", "\n\tbtnez\t"); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // COPY_S_B, COPY_S_D, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_D, COPY_U_H, ...
    SStream_concat(O, "%s", "["); 
    break;
  case 7:
    // CmpiRxImm16, LiRxImm16, SltiRxImm16, SltiuRxImm16
    SStream_concat(O, "%s", " \t# 16 bit inst"); 
    return;
    break;
  case 8:
    // DSLL64_32
    SStream_concat(O, "%s", ", 32"); 
    return;
    break;
  case 9:
    // GotPrologue16
    SStream_concat(O, "%s", "\n\taddiu\t"); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", ", $pc, "); 
    printOperand(MI, 3, O); 
    SStream_concat(O, "%s", "\n "); 
    return;
    break;
  case 10:
    // LBUX, LDXC1, LDXC164, LHX, LUXC1, LUXC164, LUXC1_MM, LWX, LWXC1, LWXC1...
    SStream_concat(O, "%s", "("); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", ")"); 
    return;
    break;
  case 11:
    // LwRxSpImmX16, SwRxSpImmX16
    SStream_concat(O, "%s", " ( "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", " ); "); 
    return;
    break;
  case 12:
    // SLL64_32, SLL64_64
    SStream_concat(O, "%s", ", 0"); 
    return;
    break;
  case 13:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    SStream_concat(O, "%s", "\n\tbteqz\t.+4\n\tmove "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 2, O); 
    return;
    break;
  case 14:
    // SelTBtneZCmp, SelTBtneZCmpi, SelTBtneZSlt, SelTBtneZSlti, SelTBtneZSlt...
    SStream_concat(O, "%s", "\n\tbtnez\t.+4\n\tmove "); 
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 4 encoded into 3 bits for 5 unique commands.
  //printf("Frag-4: %"PRIu64"\n", (Bits >> 28) & 7);
  switch ((Bits >> 28) & 7) {
  default:   // unreachable.
  case 0:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    printOperand(MI, 2, O); 
    break;
  case 1:
    // ADDVI_B, ADDVI_D, ADDVI_H, ADDVI_W, ANDI_B, BCLRI_B, BCLRI_D, BCLRI_H,...
    printUnsignedImm8(MI, 2, O); 
    break;
  case 2:
    // ANDi, ANDi64, ANDi_MM, APPEND, BALIGN, DEXT, DEXTM, DEXTU, DINS, DINSM...
    printUnsignedImm(MI, 2, O); 
    break;
  case 3:
    // BINSLI_B, BINSLI_D, BINSLI_H, BINSLI_W, BINSRI_B, BINSRI_D, BINSRI_H, ...
    printUnsignedImm8(MI, 3, O); 
    break;
  case 4:
    // BINSL_B, BINSL_D, BINSL_H, BINSL_W, BINSR_B, BINSR_D, BINSR_H, BINSR_W...
    printOperand(MI, 3, O); 
    break;
  }


  // Fragment 5 encoded into 2 bits for 3 unique commands.
  //printf("Frag-5: %"PRIu64"\n", (Bits >> 31) & 3);
  switch ((Bits >> 31) & 3) {
  default:   // unreachable.
  case 0:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    return;
    break;
  case 1:
    // COPY_S_B, COPY_S_D, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_D, COPY_U_H, ...
    SStream_concat(O, "%s", "]"); 
    return;
    break;
  case 2:
    // DEXT, DEXTM, DEXTU, DINS, DINSM, DINSU, DLSA, EXT, EXT_MM, INS, INS_MM...
    SStream_concat(O, "%s", ", "); 
    break;
  }


  // Fragment 6 encoded into 1 bits for 2 unique commands.
  //printf("Frag-6: %"PRIu64"\n", (Bits >> 33) & 1);
  if ((Bits >> 33) & 1) {
    // DLSA, LSA
    printUnsignedImm(MI, 3, O); 
    return;
  } else {
    // DEXT, DEXTM, DEXTU, DINS, DINSM, DINSU, EXT, EXT_MM, INS, INS_MM, MADD...
    printOperand(MI, 3, O); 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static char *getRegisterName(unsigned RegNo)
{
  // assert(RegNo && RegNo < 317 && "Invalid register number!");

#ifndef CAPSTONE_DIET
  static char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'w', '1', '0', 0,
  /* 8 */ 'f', '2', '0', 0,
  /* 12 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '0', 0,
  /* 25 */ 'w', '2', '0', 0,
  /* 29 */ 'f', '3', '0', 0,
  /* 33 */ 'w', '3', '0', 0,
  /* 37 */ 'a', '0', 0,
  /* 40 */ 'a', 'c', '0', 0,
  /* 44 */ 'f', 'c', 'c', '0', 0,
  /* 49 */ 'f', '0', 0,
  /* 52 */ 'k', '0', 0,
  /* 55 */ 's', '0', 0,
  /* 58 */ 't', '0', 0,
  /* 61 */ 'v', '0', 0,
  /* 64 */ 'w', '0', 0,
  /* 67 */ 'f', '1', '1', 0,
  /* 71 */ 'w', '1', '1', 0,
  /* 75 */ 'f', '2', '1', 0,
  /* 79 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '1', 0,
  /* 92 */ 'w', '2', '1', 0,
  /* 96 */ 'f', '3', '1', 0,
  /* 100 */ 'w', '3', '1', 0,
  /* 104 */ 'a', '1', 0,
  /* 107 */ 'a', 'c', '1', 0,
  /* 111 */ 'f', 'c', 'c', '1', 0,
  /* 116 */ 'f', '1', 0,
  /* 119 */ 'k', '1', 0,
  /* 122 */ 's', '1', 0,
  /* 125 */ 't', '1', 0,
  /* 128 */ 'v', '1', 0,
  /* 131 */ 'w', '1', 0,
  /* 134 */ 'f', '1', '2', 0,
  /* 138 */ 'w', '1', '2', 0,
  /* 142 */ 'f', '2', '2', 0,
  /* 146 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '2', 0,
  /* 159 */ 'w', '2', '2', 0,
  /* 163 */ 'a', '2', 0,
  /* 166 */ 'a', 'c', '2', 0,
  /* 170 */ 'f', 'c', 'c', '2', 0,
  /* 175 */ 'f', '2', 0,
  /* 178 */ 's', '2', 0,
  /* 181 */ 't', '2', 0,
  /* 184 */ 'w', '2', 0,
  /* 187 */ 'f', '1', '3', 0,
  /* 191 */ 'w', '1', '3', 0,
  /* 195 */ 'f', '2', '3', 0,
  /* 199 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '3', 0,
  /* 212 */ 'w', '2', '3', 0,
  /* 216 */ 'a', '3', 0,
  /* 219 */ 'a', 'c', '3', 0,
  /* 223 */ 'f', 'c', 'c', '3', 0,
  /* 228 */ 'f', '3', 0,
  /* 231 */ 's', '3', 0,
  /* 234 */ 't', '3', 0,
  /* 237 */ 'w', '3', 0,
  /* 240 */ 'f', '1', '4', 0,
  /* 244 */ 'w', '1', '4', 0,
  /* 248 */ 'f', '2', '4', 0,
  /* 252 */ 'w', '2', '4', 0,
  /* 256 */ 'f', 'c', 'c', '4', 0,
  /* 261 */ 'f', '4', 0,
  /* 264 */ 's', '4', 0,
  /* 267 */ 't', '4', 0,
  /* 270 */ 'w', '4', 0,
  /* 273 */ 'f', '1', '5', 0,
  /* 277 */ 'w', '1', '5', 0,
  /* 281 */ 'f', '2', '5', 0,
  /* 285 */ 'w', '2', '5', 0,
  /* 289 */ 'f', 'c', 'c', '5', 0,
  /* 294 */ 'f', '5', 0,
  /* 297 */ 's', '5', 0,
  /* 300 */ 't', '5', 0,
  /* 303 */ 'w', '5', 0,
  /* 306 */ 'f', '1', '6', 0,
  /* 310 */ 'w', '1', '6', 0,
  /* 314 */ 'f', '2', '6', 0,
  /* 318 */ 'w', '2', '6', 0,
  /* 322 */ 'f', 'c', 'c', '6', 0,
  /* 327 */ 'f', '6', 0,
  /* 330 */ 's', '6', 0,
  /* 333 */ 't', '6', 0,
  /* 336 */ 'w', '6', 0,
  /* 339 */ 'f', '1', '7', 0,
  /* 343 */ 'w', '1', '7', 0,
  /* 347 */ 'f', '2', '7', 0,
  /* 351 */ 'w', '2', '7', 0,
  /* 355 */ 'f', 'c', 'c', '7', 0,
  /* 360 */ 'f', '7', 0,
  /* 363 */ 's', '7', 0,
  /* 366 */ 't', '7', 0,
  /* 369 */ 'w', '7', 0,
  /* 372 */ 'f', '1', '8', 0,
  /* 376 */ 'w', '1', '8', 0,
  /* 380 */ 'f', '2', '8', 0,
  /* 384 */ 'w', '2', '8', 0,
  /* 388 */ 'f', '8', 0,
  /* 391 */ 't', '8', 0,
  /* 394 */ 'w', '8', 0,
  /* 397 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '1', '6', '_', '1', '9', 0,
  /* 413 */ 'f', '1', '9', 0,
  /* 417 */ 'w', '1', '9', 0,
  /* 421 */ 'f', '2', '9', 0,
  /* 425 */ 'w', '2', '9', 0,
  /* 429 */ 'f', '9', 0,
  /* 432 */ 't', '9', 0,
  /* 435 */ 'w', '9', 0,
  /* 438 */ 'D', 'S', 'P', 'E', 'F', 'I', 0,
  /* 445 */ 'r', 'a', 0,
  /* 448 */ 'p', 'c', 0,
  /* 451 */ 'D', 'S', 'P', 'C', 'C', 'o', 'n', 'd', 0,
  /* 460 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', 0,
  /* 471 */ 'h', 'i', 0,
  /* 474 */ 'l', 'o', 0,
  /* 477 */ 'z', 'e', 'r', 'o', 0,
  /* 482 */ 'f', 'p', 0,
  /* 485 */ 'g', 'p', 0,
  /* 488 */ 's', 'p', 0,
  /* 491 */ 'D', 'S', 'P', 'P', 'o', 's', 0,
  /* 498 */ 'a', 't', 0,
  /* 501 */ 'D', 'S', 'P', 'S', 'C', 'o', 'u', 'n', 't', 0,
  /* 511 */ 'D', 'S', 'P', 'C', 'a', 'r', 'r', 'y', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    498, 451, 511, 438, 460, 491, 501, 482, 485, 136, 69, 2, 308, 242, 
    275, 189, 341, 448, 445, 488, 477, 37, 104, 163, 216, 40, 107, 166, 
    219, 498, 2, 69, 136, 189, 242, 275, 308, 341, 374, 411, 1, 68, 
    135, 188, 241, 274, 307, 340, 373, 410, 9, 76, 143, 196, 249, 282, 
    315, 348, 381, 422, 30, 97, 49, 175, 261, 327, 388, 0, 134, 240, 
    306, 372, 8, 142, 248, 314, 380, 29, 12, 79, 146, 199, 49, 116, 
    175, 228, 261, 294, 327, 360, 388, 429, 0, 67, 134, 187, 240, 273, 
    306, 339, 372, 413, 8, 75, 142, 195, 248, 281, 314, 347, 380, 421, 
    29, 96, 44, 111, 170, 223, 256, 289, 322, 355, 2, 69, 136, 189, 
    242, 275, 308, 341, 374, 411, 1, 68, 135, 188, 241, 274, 307, 340, 
    373, 410, 9, 76, 143, 196, 249, 282, 315, 348, 381, 422, 30, 97, 
    482, 49, 116, 175, 228, 261, 294, 327, 360, 388, 429, 0, 67, 134, 
    187, 240, 273, 306, 339, 372, 413, 8, 75, 142, 195, 248, 281, 314, 
    347, 380, 421, 29, 96, 485, 40, 107, 166, 219, 422, 52, 119, 40, 
    107, 166, 219, 445, 55, 122, 178, 231, 264, 297, 330, 363, 488, 58, 
    125, 181, 234, 267, 300, 333, 366, 391, 432, 61, 128, 64, 131, 184, 
    237, 270, 303, 336, 369, 394, 435, 4, 71, 138, 191, 244, 277, 310, 
    343, 376, 417, 25, 92, 159, 212, 252, 285, 318, 351, 384, 425, 33, 
    100, 477, 37, 104, 163, 216, 40, 49, 116, 175, 228, 261, 294, 327, 
    360, 388, 429, 0, 67, 134, 187, 240, 273, 306, 339, 372, 413, 8, 
    75, 142, 195, 248, 281, 314, 347, 380, 421, 29, 96, 397, 471, 52, 
    119, 474, 55, 122, 178, 231, 264, 297, 330, 363, 58, 125, 181, 234, 
    267, 300, 333, 366, 391, 432, 61, 128, 
  };

  //int i;
  //for (i = 0; i < sizeof(RegAsmOffset)/4; i++)
  //     printf("%s = %u\n", AsmStrs+RegAsmOffset[i], i + 1);
  //printf("*************************\n");
  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static char *printAliasInstr(MCInst *MI, SStream *OS, void *info)
{
  #define GETREGCLASS_CONTAIN(_class, _reg) MCRegisterClass_contains(MCRegisterInfo_getRegClass(MRI, _class), MCOperand_getReg(MCInst_getOperand(MI, _reg)))
  const char *AsmString;
  MCRegisterInfo *MRI = (MCRegisterInfo *)info;
  switch (MCInst_getOpcode(MI)) {
  default: return NULL;
  case Mips_ADDu:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_getReg(MCInst_getOperand(MI, 2)) == Mips_ZERO) {
      // (ADDu GPR32Opnd:$dst, GPR32Opnd:$src, ZERO)
      AsmString = "move $\x01, $\x02";
      break;
    }
    return NULL;
  case Mips_BREAK:
    if (MCInst_getNumOperands(MI) == 2 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0 &&
        MCOperand_isImm(MCInst_getOperand(MI, 1)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 1)) == 0) {
      // (BREAK 0, 0)
      AsmString = "break";
      break;
    }
    return NULL;
  case Mips_DADDu:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR64RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR64RegClassID, 1) &&
        MCOperand_getReg(MCInst_getOperand(MI, 2)) == Mips_ZERO_64) {
      // (DADDu GPR64Opnd:$dst, GPR64Opnd:$src, ZERO_64)
      AsmString = "move $\x01, $\x02";
      break;
    }
    return NULL;
  case Mips_DI:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_getReg(MCInst_getOperand(MI, 0)) == Mips_ZERO) {
      // (DI ZERO)
      AsmString = "di";
      break;
    }
    return NULL;
  case Mips_EI:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_getReg(MCInst_getOperand(MI, 0)) == Mips_ZERO) {
      // (EI ZERO)
      AsmString = "ei";
      break;
    }
    return NULL;
  case Mips_SLL:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_getReg(MCInst_getOperand(MI, 0)) == Mips_ZERO &&
        MCOperand_getReg(MCInst_getOperand(MI, 1)) == Mips_ZERO &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (SLL ZERO, ZERO, 0)
      AsmString = "nop";
      break;
    }
    return NULL;
  case Mips_SUB:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_getReg(MCInst_getOperand(MI, 1)) == Mips_ZERO &&
        MCOperand_isReg(MCInst_getOperand(MI, 2)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 2)) {
      // (SUB GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs)
      AsmString = "neg $\x01, $\x03";
      break;
    }
    return NULL;
  case Mips_SUBu:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_getReg(MCInst_getOperand(MI, 1)) == Mips_ZERO &&
        MCOperand_isReg(MCInst_getOperand(MI, 2)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 2)) {
      // (SUBu GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs)
      AsmString = "negu $\x01, $\x03";
      break;
    }
    return NULL;
  case Mips_SYSCALL:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0) {
      // (SYSCALL 0)
      AsmString = "syscall";
      break;
    }
    return NULL;
  case Mips_TEQ:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TEQ GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "teq $\x01, $\x02";
      break;
    }
    return NULL;
  case Mips_TGE:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TGE GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tge $\x01, $\x02";
      break;
    }
    return NULL;
  case Mips_TGEU:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TGEU GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tgeu $\x01, $\x02";
      break;
    }
    return NULL;
  case Mips_TLT:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TLT GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tlt $\x01, $\x02";
      break;
    }
    return NULL;
  case Mips_TLTU:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TLTU GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tltu $\x01, $\x02";
      break;
    }
    return NULL;
  case Mips_TNE:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isReg(MCInst_getOperand(MI, 0)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 0) &&
        MCOperand_isReg(MCInst_getOperand(MI, 1)) &&
        GETREGCLASS_CONTAIN(Mips_GPR32RegClassID, 1) &&
        MCOperand_isImm(MCInst_getOperand(MI, 2)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 2)) == 0) {
      // (TNE GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tne $\x01, $\x02";
      break;
    }
    return NULL;
  }

  char *tmp = cs_strdup(AsmString), *AsmMnem, *AsmOps;
  AsmMnem = tmp;
  AsmOps = strchr(tmp, ' ');
  if (AsmOps) {
    *AsmOps = '\0';
    AsmOps += 1;
  }
  SStream_concat(OS, "%s", AsmMnem);
  if (AsmOps) {
    SStream_concat(OS, "\t");
    char *c;
    for (c = AsmOps; *c; c++) {
      if (*c == '$') {
        c += 1;
        printOperand(MI, *c - 1, OS);
      } else {
        SStream_concat(OS, "%c", *c);
      }
    }
  }
  return tmp;
}

#endif // PRINT_ALIAS_INSTR
